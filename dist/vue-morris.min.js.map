{"version":3,"sources":["webpack:///vue-morris.min.js","webpack:///webpack/bootstrap e55b4164b127bd204026","webpack:///./src/components/chart-props.js","webpack:///./src/util/converter.js","webpack:///./~/morris.js/morris.js","webpack:///./~/morris.js/morris.css?ee78","webpack:///./src/components/area-chart.vue","webpack:///./src/components/bar-chart.vue","webpack:///./src/components/donut-chart.vue","webpack:///./src/components/line-chart.vue","webpack:///area-chart.vue","webpack:///bar-chart.vue","webpack:///donut-chart.vue","webpack:///line-chart.vue","webpack:///./~/morris.js/morris.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./src/components/line-chart.vue?67c5","webpack:///./src/components/donut-chart.vue?fa71","webpack:///./src/components/bar-chart.vue?0cb4","webpack:///./src/components/area-chart.vue?e29f","webpack:///./~/vue-style-loader/addStyles.js","webpack:///./src/index.js"],"names":["define","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Props","id","type","String","required","data","Array","barColors","xkey","default","ykeys","labels","hoverCallback","Function","axes","Boolean","hideHover","stacked","resize","grid","gridTextColor","gridTextSize","Number","gridTextFamily","gridTextWeight","colors","formatter","lineColors","xLabels","ChartProps","bar","props","donut","line","area","Converter","toObject","JSON","parse","toBoolean","toInt","parseInt","$","Morris","minutesSpecHelper","secondsSpecHelper","__slice","slice","__bind","fn","me","apply","arguments","__hasProp","__extends","child","parent","ctor","this","constructor","key","__super__","__indexOf","indexOf","item","length","window","jQuery","EventEmitter","on","handler","handlers","push","fire","args","_i","_len","_ref","_results","commas","num","absnum","intnum","ret","strabsnum","Math","abs","floor","toFixed","replace","toString","pad2","number","Grid","_super","options","resizeHandler","_this","element","el","document","getElementById","Error","css","extend","gridDefaults","defaults","units","postUnits","raphael","Raphael","elementWidth","elementHeight","dirty","selectFrom","init","setData","bind","evt","left","offset","right","width","x","pageX","hitTest","min","_x","max","selectionRect","attr","pageY","top","hide","touch","originalEvent","touches","changedTouches","rangeSelect","rect","innerHeight","fill","rangeSelectColor","stroke","toBack","startRange","endRange","timeoutId","clearTimeout","setTimeout","postInit","dateFormat","gridLineColor","gridStrokeWidth","yLabelFormat","xLabelAngle","numLines","padding","parseTime","preUnits","ymax","ymin","goals","goalStrokeWidth","goalLineColors","events","eventStrokeWidth","eventLineColors","redraw","e","idx","index","maxGoal","minGoal","row","step","total","y","ykey","yval","clear","hover","cumulative","src","label","parseDate","Date","xLabelFormat","_j","_len1","_results1","parseFloat","sort","a","b","xmin","xmax","yboundary","autoGridLines","_ref1","_ref2","boundaryType","currentValue","boundaryOption","suggestedValue","nlines","gmax","gmin","smag","span","unit","ymag","log","pow","ceil","_calc","bottomOffsets","gridLine","h","w","yLabelWidths","height","bottom","measureText","yAxisFormat","text","dx","dy","calc","transY","transX","drawGrid","drawGoals","drawEvents","draw","angle","tt","rotate","getBBox","remove","lineY","drawYAxisLabel","drawGridLine","color","goal","drawGoal","event","drawEvent","path","xPos","yPos","show","end","start","setSize","date","isecs","msecs","offsetmins","q","r","secs","match","getTime","getDay","setMonth","UTC","round","Hover","append","class","update","html","moveTo","content","hoverHeight","hoverWidth","parentHeight","parentWidth","innerWidth","outerWidth","outerHeight","Line","hilight","onHoverOut","onHoverMove","onGridClick","lineWidth","pointSize","pointStrokeWidths","pointStrokeColors","pointFillColors","smooth","xLabelMargin","calcPoints","generatePaths","_y","_ymax","concat","displayHoverForRow","hoverContentForRow","j","colorFor","coords","paths","createPath","drawXAxis","drawSeries","drawLabel","prevAngleMargin","prevLabelMargin","ypos","labelText","xpos","labelBox","margin","textBox","drawXAxisLabel","transform","cos","PI","sin","labelSeries","reverse","seriesPoints","_drawLineFor","_drawPointFor","circle","drawLinePoint","drawLinePath","coord","g","grads","ix","lg","prevCoord","x1","x2","y1","y2","gradients","grad","nextCoord","prevHilight","animate","pointShrinkSeries","pointGrowSeries","sidx","lineColor","lineIndex","lineWidthForSeries","pointColor","pointSizeForSeries","pointStrokeWidthForSeries","pointStrokeColorForSeries","animation","dmin","dmax","pxwidth","specName","d0","ddensity","spec","t","LABEL_SPECS","AUTO_LABEL_ORDER","fmt","incr","interval","getFullYear","getMonth","getDate","getHours","getMinutes","setUTCMinutes","getUTCMinutes","getSeconds","setUTCSeconds","getUTCSeconds","decade","setFullYear","year","month","week","setDate","day","hour","30min","15min","10min","5min","minute","30sec","15sec","10sec","5sec","second","Area","areaOptions","areaDefaults","behaveLikeLine","fillOpacity","range","_k","_results2","_drawFillFor","drawFilledPath","fillForSeries","rgb2hsl","hsl","Bar","barSizeRatio","barGap","barOpacity","barRadius","calcBars","xAxisLabelTopPadding","barWidth","groupWidth","lastTop","leftPadding","numBars","size","spaceLeft","zeroPos","barSize","bars","verticalGridCondition","drawBar","verticalGridColor","verticalGridOpacity","barColor","opacity","radiusArray","maxRadius","roundedRect","Donut","select","click","backgroundColor","labelColor","C","cx","cy","last","max_value","next","seg","_len2","values","segments","DonutSegment","render","text1","drawEmptyDonutLabel","text2","segment","deselect","setLabels","label1","label2","inner","maxHeightBottom","maxHeightTop","maxWidth","text1bbox","text1scale","text2bbox","text2scale","fontSize","fontWeight","outer","p0","p1","sin_p0","cos_p0","sin_p1","cos_p1","is_long","calcSegment","selectedPath","calcArc","calcArcPoints","r1","r2","ix0","ix1","iy0","iy1","ox0","ox1","oy0","oy1","arc","drawDonutArc","drawDonutSegment","stroke-width","fillColor","strokeColor","hoverFunction","clickFunction","selected","locals","__vue_exports__","__vue_options__","__vue_template__","staticRenderFns","_interopRequireDefault","obj","_converter","_converter2","_chartProps","_chartProps2","mixins","chart","watch","val","$nextTick","mounted","list","result","join","mediaQuery","alreadyImportedModules","_vm","_h","$createElement","_c","_self","attrs","addStylesToDom","styles","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","removeStyleElement","parentNode","removeChild","splice","createStyleElement","createElement","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","sources","btoa","unescape","encodeURIComponent","stringify","memoize","memo","isOldIE","test","navigator","userAgent","toLowerCase","getElementsByTagName","DEBUG","newList","mayRemove","textStore","replacement","filter","_donutChart","_donutChart2","_barChart","_barChart2","_lineChart","_lineChart2","_areaChart","_areaChart2","VueMorris","DonutChart","BarChart","LineChart","AreaChart"],"mappings":"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","file":"vue-morris.min.js","sourcesContent":["define(\"VueMorris\", [], function() { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 19);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\nvar Props = {\n  id: { type: String, required: true },\n  data: { type: [String, Array], required: true },\n  barColors: { type: [String, Array], required: false },\n  xkey: { type: String, required: false, default: 'key' },\n  ykeys: { type: [String, Array], required: false, default: ['value'] },\n  labels: { type: [String, Array], required: false, default: ['Value'] },\n  hoverCallback: { type: Function, required: false },\n  axes: { type: [Boolean, String], required: false, default: true },\n  hideHover: { type: String, required: false },\n  stacked: { type: [Boolean, String], required: false },\n  resize: { type: [Boolean, String], required: false },\n  grid: { type: [Boolean, String], required: false, default: true },\n  gridTextColor: { type: String, required: false, default: '#888' },\n  gridTextSize: { type: [Number, String], required: false, default: 12 },\n  gridTextFamily: { type: String, required: false, default: 'sans-serif' },\n  gridTextWeight: { type: String, required: false, default: 'normal' },\n\n  colors: { type: [String, Array], required: false },\n  formatter: { type: Function, required: false },\n\n  lineColors: { type: [String, Array], required: false },\n  xLabels: { type: String, required: false }\n};\n\nvar ChartProps = {\n\n  bar: {\n    props: {\n      id: Props.id,\n      data: Props.data,\n      barColors: Props.barColors,\n      xkey: Props.xkey,\n      ykeys: Props.ykeys,\n      labels: Props.labels,\n      hoverCallback: Props.hoverCallback,\n      grid: Props.grid,\n      axes: Props.axes,\n      hideHover: Props.hideHover,\n      stacked: Props.stacked,\n      resize: Props.resize,\n      gridTextColor: Props.gridTextColor,\n      gridTextSize: Props.gridTextSize,\n      gridTextFamily: Props.gridTextFamily,\n      gridTextWeight: Props.gridTextWeight\n    }\n  },\n\n  donut: {\n    props: {\n      id: Props.id,\n      data: Props.data,\n      colors: Props.colors,\n      formatter: Props.formatter,\n      resize: Props.resize\n    }\n  },\n\n  line: {\n    props: {\n      id: Props.id,\n      data: Props.data,\n      resize: Props.resize,\n      lineColors: Props.lineColors,\n      xkey: Props.xkey,\n      ykeys: Props.ykeys,\n      labels: Props.labels,\n      xLabels: Props.xLabels,\n      grid: Props.grid,\n      gridTextColor: Props.gridTextColor,\n      gridTextSize: Props.gridTextSize,\n      gridTextFamily: Props.gridTextFamily,\n      gridTextWeight: Props.gridTextWeight\n    }\n  },\n\n  area: {\n    props: {\n      id: Props.id,\n      data: Props.data,\n      resize: Props.resize,\n      lineColors: Props.lineColors,\n      xkey: Props.xkey,\n      ykeys: Props.ykeys,\n      labels: Props.labels,\n      xLabels: Props.xLabels,\n      grid: Props.grid,\n      gridTextColor: Props.gridTextColor,\n      gridTextSize: Props.gridTextSize,\n      gridTextFamily: Props.gridTextFamily,\n      gridTextWeight: Props.gridTextWeight\n    }\n  }\n\n};\n\nexports.default = ChartProps;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nvar Converter = {\n  toObject: function toObject(data) {\n    if (typeof data === 'string') {\n      return JSON.parse(data);\n    }\n    return data;\n  },\n  toBoolean: function toBoolean(data) {\n    if (typeof data === 'string') {\n      return data === 'true';\n    }\n    return data;\n  },\n  toInt: function toInt(data) {\n    if (typeof data === 'string') {\n      return parseInt(data);\n    }\n    return data;\n  }\n};\n\nmodule.exports = Converter;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n/* @license\nmorris.js v0.5.0\nCopyright 2014 Olly Smith All rights reserved.\nLicensed under the BSD-2-Clause License.\n*/\n\n\n(function() {\n  var $, Morris, minutesSpecHelper, secondsSpecHelper,\n    __slice = [].slice,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  Morris = window.Morris = {};\n\n  $ = jQuery;\n\n  Morris.EventEmitter = (function() {\n    function EventEmitter() {}\n\n    EventEmitter.prototype.on = function(name, handler) {\n      if (this.handlers == null) {\n        this.handlers = {};\n      }\n      if (this.handlers[name] == null) {\n        this.handlers[name] = [];\n      }\n      this.handlers[name].push(handler);\n      return this;\n    };\n\n    EventEmitter.prototype.fire = function() {\n      var args, handler, name, _i, _len, _ref, _results;\n      name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if ((this.handlers != null) && (this.handlers[name] != null)) {\n        _ref = this.handlers[name];\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          handler = _ref[_i];\n          _results.push(handler.apply(null, args));\n        }\n        return _results;\n      }\n    };\n\n    return EventEmitter;\n\n  })();\n\n  Morris.commas = function(num) {\n    var absnum, intnum, ret, strabsnum;\n    if (num != null) {\n      ret = num < 0 ? \"-\" : \"\";\n      absnum = Math.abs(num);\n      intnum = Math.floor(absnum).toFixed(0);\n      ret += intnum.replace(/(?=(?:\\d{3})+$)(?!^)/g, ',');\n      strabsnum = absnum.toString();\n      if (strabsnum.length > intnum.length) {\n        ret += strabsnum.slice(intnum.length);\n      }\n      return ret;\n    } else {\n      return '-';\n    }\n  };\n\n  Morris.pad2 = function(number) {\n    return (number < 10 ? '0' : '') + number;\n  };\n\n  Morris.Grid = (function(_super) {\n    __extends(Grid, _super);\n\n    function Grid(options) {\n      this.resizeHandler = __bind(this.resizeHandler, this);\n      var _this = this;\n      if (typeof options.element === 'string') {\n        this.el = $(document.getElementById(options.element));\n      } else {\n        this.el = $(options.element);\n      }\n      if ((this.el == null) || this.el.length === 0) {\n        throw new Error(\"Graph container element not found\");\n      }\n      if (this.el.css('position') === 'static') {\n        this.el.css('position', 'relative');\n      }\n      this.options = $.extend({}, this.gridDefaults, this.defaults || {}, options);\n      if (typeof this.options.units === 'string') {\n        this.options.postUnits = options.units;\n      }\n      this.raphael = new Raphael(this.el[0]);\n      this.elementWidth = null;\n      this.elementHeight = null;\n      this.dirty = false;\n      this.selectFrom = null;\n      if (this.init) {\n        this.init();\n      }\n      this.setData(this.options.data);\n      this.el.bind('mousemove', function(evt) {\n        var left, offset, right, width, x;\n        offset = _this.el.offset();\n        x = evt.pageX - offset.left;\n        if (_this.selectFrom) {\n          left = _this.data[_this.hitTest(Math.min(x, _this.selectFrom))]._x;\n          right = _this.data[_this.hitTest(Math.max(x, _this.selectFrom))]._x;\n          width = right - left;\n          return _this.selectionRect.attr({\n            x: left,\n            width: width\n          });\n        } else {\n          return _this.fire('hovermove', x, evt.pageY - offset.top);\n        }\n      });\n      this.el.bind('mouseleave', function(evt) {\n        if (_this.selectFrom) {\n          _this.selectionRect.hide();\n          _this.selectFrom = null;\n        }\n        return _this.fire('hoverout');\n      });\n      this.el.bind('touchstart touchmove touchend', function(evt) {\n        var offset, touch;\n        touch = evt.originalEvent.touches[0] || evt.originalEvent.changedTouches[0];\n        offset = _this.el.offset();\n        return _this.fire('hovermove', touch.pageX - offset.left, touch.pageY - offset.top);\n      });\n      this.el.bind('click', function(evt) {\n        var offset;\n        offset = _this.el.offset();\n        return _this.fire('gridclick', evt.pageX - offset.left, evt.pageY - offset.top);\n      });\n      if (this.options.rangeSelect) {\n        this.selectionRect = this.raphael.rect(0, 0, 0, this.el.innerHeight()).attr({\n          fill: this.options.rangeSelectColor,\n          stroke: false\n        }).toBack().hide();\n        this.el.bind('mousedown', function(evt) {\n          var offset;\n          offset = _this.el.offset();\n          return _this.startRange(evt.pageX - offset.left);\n        });\n        this.el.bind('mouseup', function(evt) {\n          var offset;\n          offset = _this.el.offset();\n          _this.endRange(evt.pageX - offset.left);\n          return _this.fire('hovermove', evt.pageX - offset.left, evt.pageY - offset.top);\n        });\n      }\n      if (this.options.resize) {\n        $(window).bind('resize', function(evt) {\n          if (_this.timeoutId != null) {\n            window.clearTimeout(_this.timeoutId);\n          }\n          return _this.timeoutId = window.setTimeout(_this.resizeHandler, 100);\n        });\n      }\n      this.el.css('-webkit-tap-highlight-color', 'rgba(0,0,0,0)');\n      if (this.postInit) {\n        this.postInit();\n      }\n    }\n\n    Grid.prototype.gridDefaults = {\n      dateFormat: null,\n      axes: true,\n      grid: true,\n      gridLineColor: '#aaa',\n      gridStrokeWidth: 0.5,\n      gridTextColor: '#888',\n      gridTextSize: 12,\n      gridTextFamily: 'sans-serif',\n      gridTextWeight: 'normal',\n      hideHover: false,\n      yLabelFormat: null,\n      xLabelAngle: 0,\n      numLines: 5,\n      padding: 25,\n      parseTime: true,\n      postUnits: '',\n      preUnits: '',\n      ymax: 'auto',\n      ymin: 'auto 0',\n      goals: [],\n      goalStrokeWidth: 1.0,\n      goalLineColors: ['#666633', '#999966', '#cc6666', '#663333'],\n      events: [],\n      eventStrokeWidth: 1.0,\n      eventLineColors: ['#005a04', '#ccffbb', '#3a5f0b', '#005502'],\n      rangeSelect: null,\n      rangeSelectColor: '#eef',\n      resize: false\n    };\n\n    Grid.prototype.setData = function(data, redraw) {\n      var e, idx, index, maxGoal, minGoal, ret, row, step, total, y, ykey, ymax, ymin, yval, _ref;\n      if (redraw == null) {\n        redraw = true;\n      }\n      this.options.data = data;\n      if ((data == null) || data.length === 0) {\n        this.data = [];\n        this.raphael.clear();\n        if (this.hover != null) {\n          this.hover.hide();\n        }\n        return;\n      }\n      ymax = this.cumulative ? 0 : null;\n      ymin = this.cumulative ? 0 : null;\n      if (this.options.goals.length > 0) {\n        minGoal = Math.min.apply(Math, this.options.goals);\n        maxGoal = Math.max.apply(Math, this.options.goals);\n        ymin = ymin != null ? Math.min(ymin, minGoal) : minGoal;\n        ymax = ymax != null ? Math.max(ymax, maxGoal) : maxGoal;\n      }\n      this.data = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (index = _i = 0, _len = data.length; _i < _len; index = ++_i) {\n          row = data[index];\n          ret = {\n            src: row\n          };\n          ret.label = row[this.options.xkey];\n          if (this.options.parseTime) {\n            ret.x = Morris.parseDate(ret.label);\n            if (this.options.dateFormat) {\n              ret.label = this.options.dateFormat(ret.x);\n            } else if (typeof ret.label === 'number') {\n              ret.label = new Date(ret.label).toString();\n            }\n          } else {\n            ret.x = index;\n            if (this.options.xLabelFormat) {\n              ret.label = this.options.xLabelFormat(ret);\n            }\n          }\n          total = 0;\n          ret.y = (function() {\n            var _j, _len1, _ref, _results1;\n            _ref = this.options.ykeys;\n            _results1 = [];\n            for (idx = _j = 0, _len1 = _ref.length; _j < _len1; idx = ++_j) {\n              ykey = _ref[idx];\n              yval = row[ykey];\n              if (typeof yval === 'string') {\n                yval = parseFloat(yval);\n              }\n              if ((yval != null) && typeof yval !== 'number') {\n                yval = null;\n              }\n              if (yval != null) {\n                if (this.cumulative) {\n                  total += yval;\n                } else {\n                  if (ymax != null) {\n                    ymax = Math.max(yval, ymax);\n                    ymin = Math.min(yval, ymin);\n                  } else {\n                    ymax = ymin = yval;\n                  }\n                }\n              }\n              if (this.cumulative && (total != null)) {\n                ymax = Math.max(total, ymax);\n                ymin = Math.min(total, ymin);\n              }\n              _results1.push(yval);\n            }\n            return _results1;\n          }).call(this);\n          _results.push(ret);\n        }\n        return _results;\n      }).call(this);\n      if (this.options.parseTime) {\n        this.data = this.data.sort(function(a, b) {\n          return (a.x > b.x) - (b.x > a.x);\n        });\n      }\n      this.xmin = this.data[0].x;\n      this.xmax = this.data[this.data.length - 1].x;\n      this.events = [];\n      if (this.options.events.length > 0) {\n        if (this.options.parseTime) {\n          this.events = (function() {\n            var _i, _len, _ref, _results;\n            _ref = this.options.events;\n            _results = [];\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n              e = _ref[_i];\n              _results.push(Morris.parseDate(e));\n            }\n            return _results;\n          }).call(this);\n        } else {\n          this.events = this.options.events;\n        }\n        this.xmax = Math.max(this.xmax, Math.max.apply(Math, this.events));\n        this.xmin = Math.min(this.xmin, Math.min.apply(Math, this.events));\n      }\n      if (this.xmin === this.xmax) {\n        this.xmin -= 1;\n        this.xmax += 1;\n      }\n      this.ymin = this.yboundary('min', ymin);\n      this.ymax = this.yboundary('max', ymax);\n      if (this.ymin === this.ymax) {\n        if (ymin) {\n          this.ymin -= 1;\n        }\n        this.ymax += 1;\n      }\n      if (((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'y') || this.options.grid === true) {\n        if (this.options.ymax === this.gridDefaults.ymax && this.options.ymin === this.gridDefaults.ymin) {\n          this.grid = this.autoGridLines(this.ymin, this.ymax, this.options.numLines);\n          this.ymin = Math.min(this.ymin, this.grid[0]);\n          this.ymax = Math.max(this.ymax, this.grid[this.grid.length - 1]);\n        } else {\n          step = (this.ymax - this.ymin) / (this.options.numLines - 1);\n          this.grid = (function() {\n            var _i, _ref1, _ref2, _results;\n            _results = [];\n            for (y = _i = _ref1 = this.ymin, _ref2 = this.ymax; step > 0 ? _i <= _ref2 : _i >= _ref2; y = _i += step) {\n              _results.push(y);\n            }\n            return _results;\n          }).call(this);\n        }\n      }\n      this.dirty = true;\n      if (redraw) {\n        return this.redraw();\n      }\n    };\n\n    Grid.prototype.yboundary = function(boundaryType, currentValue) {\n      var boundaryOption, suggestedValue;\n      boundaryOption = this.options[\"y\" + boundaryType];\n      if (typeof boundaryOption === 'string') {\n        if (boundaryOption.slice(0, 4) === 'auto') {\n          if (boundaryOption.length > 5) {\n            suggestedValue = parseInt(boundaryOption.slice(5), 10);\n            if (currentValue == null) {\n              return suggestedValue;\n            }\n            return Math[boundaryType](currentValue, suggestedValue);\n          } else {\n            if (currentValue != null) {\n              return currentValue;\n            } else {\n              return 0;\n            }\n          }\n        } else {\n          return parseInt(boundaryOption, 10);\n        }\n      } else {\n        return boundaryOption;\n      }\n    };\n\n    Grid.prototype.autoGridLines = function(ymin, ymax, nlines) {\n      var gmax, gmin, grid, smag, span, step, unit, y, ymag;\n      span = ymax - ymin;\n      ymag = Math.floor(Math.log(span) / Math.log(10));\n      unit = Math.pow(10, ymag);\n      gmin = Math.floor(ymin / unit) * unit;\n      gmax = Math.ceil(ymax / unit) * unit;\n      step = (gmax - gmin) / (nlines - 1);\n      if (unit === 1 && step > 1 && Math.ceil(step) !== step) {\n        step = Math.ceil(step);\n        gmax = gmin + step * (nlines - 1);\n      }\n      if (gmin < 0 && gmax > 0) {\n        gmin = Math.floor(ymin / step) * step;\n        gmax = Math.ceil(ymax / step) * step;\n      }\n      if (step < 1) {\n        smag = Math.floor(Math.log(step) / Math.log(10));\n        grid = (function() {\n          var _i, _results;\n          _results = [];\n          for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\n            _results.push(parseFloat(y.toFixed(1 - smag)));\n          }\n          return _results;\n        })();\n      } else {\n        grid = (function() {\n          var _i, _results;\n          _results = [];\n          for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\n            _results.push(y);\n          }\n          return _results;\n        })();\n      }\n      return grid;\n    };\n\n    Grid.prototype._calc = function() {\n      var bottomOffsets, gridLine, h, i, w, yLabelWidths, _ref, _ref1;\n      w = this.el.width();\n      h = this.el.height();\n      if (this.elementWidth !== w || this.elementHeight !== h || this.dirty) {\n        this.elementWidth = w;\n        this.elementHeight = h;\n        this.dirty = false;\n        this.left = this.options.padding;\n        this.right = this.elementWidth - this.options.padding;\n        this.top = this.options.padding;\n        this.bottom = this.elementHeight - this.options.padding;\n        if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'y') {\n          yLabelWidths = (function() {\n            var _i, _len, _ref1, _results;\n            _ref1 = this.grid;\n            _results = [];\n            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n              gridLine = _ref1[_i];\n              _results.push(this.measureText(this.yAxisFormat(gridLine)).width);\n            }\n            return _results;\n          }).call(this);\n          this.left += Math.max.apply(Math, yLabelWidths);\n        }\n        if ((_ref1 = this.options.axes) === true || _ref1 === 'both' || _ref1 === 'x') {\n          bottomOffsets = (function() {\n            var _i, _ref2, _results;\n            _results = [];\n            for (i = _i = 0, _ref2 = this.data.length; 0 <= _ref2 ? _i < _ref2 : _i > _ref2; i = 0 <= _ref2 ? ++_i : --_i) {\n              _results.push(this.measureText(this.data[i].text, -this.options.xLabelAngle).height);\n            }\n            return _results;\n          }).call(this);\n          this.bottom -= Math.max.apply(Math, bottomOffsets);\n        }\n        this.width = Math.max(1, this.right - this.left);\n        this.height = Math.max(1, this.bottom - this.top);\n        this.dx = this.width / (this.xmax - this.xmin);\n        this.dy = this.height / (this.ymax - this.ymin);\n        if (this.calc) {\n          return this.calc();\n        }\n      }\n    };\n\n    Grid.prototype.transY = function(y) {\n      return this.bottom - (y - this.ymin) * this.dy;\n    };\n\n    Grid.prototype.transX = function(x) {\n      if (this.data.length === 1) {\n        return (this.left + this.right) / 2;\n      } else {\n        return this.left + (x - this.xmin) * this.dx;\n      }\n    };\n\n    Grid.prototype.redraw = function() {\n      this.raphael.clear();\n      this._calc();\n      this.drawGrid();\n      this.drawGoals();\n      this.drawEvents();\n      if (this.draw) {\n        return this.draw();\n      }\n    };\n\n    Grid.prototype.measureText = function(text, angle) {\n      var ret, tt;\n      if (angle == null) {\n        angle = 0;\n      }\n      tt = this.raphael.text(100, 100, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).rotate(angle);\n      ret = tt.getBBox();\n      tt.remove();\n      return ret;\n    };\n\n    Grid.prototype.yAxisFormat = function(label) {\n      return this.yLabelFormat(label);\n    };\n\n    Grid.prototype.yLabelFormat = function(label) {\n      if (typeof this.options.yLabelFormat === 'function') {\n        return this.options.yLabelFormat(label);\n      } else {\n        return \"\" + this.options.preUnits + (Morris.commas(label)) + this.options.postUnits;\n      }\n    };\n\n    Grid.prototype.drawGrid = function() {\n      var lineY, y, _i, _len, _ref, _ref1, _ref2, _results;\n      if (this.options.grid === false && ((_ref = this.options.axes) !== true && _ref !== 'both' && _ref !== 'y')) {\n        return;\n      }\n      _ref1 = this.grid;\n      _results = [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        lineY = _ref1[_i];\n        y = this.transY(lineY);\n        if ((_ref2 = this.options.axes) === true || _ref2 === 'both' || _ref2 === 'y') {\n          this.drawYAxisLabel(this.left - this.options.padding / 2, y, this.yAxisFormat(lineY));\n        }\n        if (this.options.grid) {\n          _results.push(this.drawGridLine(\"M\" + this.left + \",\" + y + \"H\" + (this.left + this.width)));\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawGoals = function() {\n      var color, goal, i, _i, _len, _ref, _results;\n      _ref = this.options.goals;\n      _results = [];\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        goal = _ref[i];\n        color = this.options.goalLineColors[i % this.options.goalLineColors.length];\n        _results.push(this.drawGoal(goal, color));\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawEvents = function() {\n      var color, event, i, _i, _len, _ref, _results;\n      _ref = this.events;\n      _results = [];\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        event = _ref[i];\n        color = this.options.eventLineColors[i % this.options.eventLineColors.length];\n        _results.push(this.drawEvent(event, color));\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawGoal = function(goal, color) {\n      return this.raphael.path(\"M\" + this.left + \",\" + (this.transY(goal)) + \"H\" + this.right).attr('stroke', color).attr('stroke-width', this.options.goalStrokeWidth);\n    };\n\n    Grid.prototype.drawEvent = function(event, color) {\n      return this.raphael.path(\"M\" + (this.transX(event)) + \",\" + this.bottom + \"V\" + this.top).attr('stroke', color).attr('stroke-width', this.options.eventStrokeWidth);\n    };\n\n    Grid.prototype.drawYAxisLabel = function(xPos, yPos, text) {\n      return this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor).attr('text-anchor', 'end');\n    };\n\n    Grid.prototype.drawGridLine = function(path) {\n      return this.raphael.path(path).attr('stroke', this.options.gridLineColor).attr('stroke-width', this.options.gridStrokeWidth);\n    };\n\n    Grid.prototype.startRange = function(x) {\n      this.hover.hide();\n      this.selectFrom = x;\n      return this.selectionRect.attr({\n        x: x,\n        width: 0\n      }).show();\n    };\n\n    Grid.prototype.endRange = function(x) {\n      var end, start;\n      if (this.selectFrom) {\n        start = Math.min(this.selectFrom, x);\n        end = Math.max(this.selectFrom, x);\n        this.options.rangeSelect.call(this.el, {\n          start: this.data[this.hitTest(start)].x,\n          end: this.data[this.hitTest(end)].x\n        });\n        return this.selectFrom = null;\n      }\n    };\n\n    Grid.prototype.resizeHandler = function() {\n      this.timeoutId = null;\n      this.raphael.setSize(this.el.width(), this.el.height());\n      return this.redraw();\n    };\n\n    return Grid;\n\n  })(Morris.EventEmitter);\n\n  Morris.parseDate = function(date) {\n    var isecs, m, msecs, n, o, offsetmins, p, q, r, ret, secs;\n    if (typeof date === 'number') {\n      return date;\n    }\n    m = date.match(/^(\\d+) Q(\\d)$/);\n    n = date.match(/^(\\d+)-(\\d+)$/);\n    o = date.match(/^(\\d+)-(\\d+)-(\\d+)$/);\n    p = date.match(/^(\\d+) W(\\d+)$/);\n    q = date.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+)(Z|([+-])(\\d\\d):?(\\d\\d))?$/);\n    r = date.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+):(\\d+(\\.\\d+)?)(Z|([+-])(\\d\\d):?(\\d\\d))?$/);\n    if (m) {\n      return new Date(parseInt(m[1], 10), parseInt(m[2], 10) * 3 - 1, 1).getTime();\n    } else if (n) {\n      return new Date(parseInt(n[1], 10), parseInt(n[2], 10) - 1, 1).getTime();\n    } else if (o) {\n      return new Date(parseInt(o[1], 10), parseInt(o[2], 10) - 1, parseInt(o[3], 10)).getTime();\n    } else if (p) {\n      ret = new Date(parseInt(p[1], 10), 0, 1);\n      if (ret.getDay() !== 4) {\n        ret.setMonth(0, 1 + ((4 - ret.getDay()) + 7) % 7);\n      }\n      return ret.getTime() + parseInt(p[2], 10) * 604800000;\n    } else if (q) {\n      if (!q[6]) {\n        return new Date(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10)).getTime();\n      } else {\n        offsetmins = 0;\n        if (q[6] !== 'Z') {\n          offsetmins = parseInt(q[8], 10) * 60 + parseInt(q[9], 10);\n          if (q[7] === '+') {\n            offsetmins = 0 - offsetmins;\n          }\n        }\n        return Date.UTC(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10) + offsetmins);\n      }\n    } else if (r) {\n      secs = parseFloat(r[6]);\n      isecs = Math.floor(secs);\n      msecs = Math.round((secs - isecs) * 1000);\n      if (!r[8]) {\n        return new Date(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10), isecs, msecs).getTime();\n      } else {\n        offsetmins = 0;\n        if (r[8] !== 'Z') {\n          offsetmins = parseInt(r[10], 10) * 60 + parseInt(r[11], 10);\n          if (r[9] === '+') {\n            offsetmins = 0 - offsetmins;\n          }\n        }\n        return Date.UTC(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10) + offsetmins, isecs, msecs);\n      }\n    } else {\n      return new Date(parseInt(date, 10), 0, 1).getTime();\n    }\n  };\n\n  Morris.Hover = (function() {\n    Hover.defaults = {\n      \"class\": 'morris-hover morris-default-style'\n    };\n\n    function Hover(options) {\n      if (options == null) {\n        options = {};\n      }\n      this.options = $.extend({}, Morris.Hover.defaults, options);\n      this.el = $(\"<div class='\" + this.options[\"class\"] + \"'></div>\");\n      this.el.hide();\n      this.options.parent.append(this.el);\n    }\n\n    Hover.prototype.update = function(html, x, y) {\n      if (!html) {\n        return this.hide();\n      } else {\n        this.html(html);\n        this.show();\n        return this.moveTo(x, y);\n      }\n    };\n\n    Hover.prototype.html = function(content) {\n      return this.el.html(content);\n    };\n\n    Hover.prototype.moveTo = function(x, y) {\n      var hoverHeight, hoverWidth, left, parentHeight, parentWidth, top;\n      parentWidth = this.options.parent.innerWidth();\n      parentHeight = this.options.parent.innerHeight();\n      hoverWidth = this.el.outerWidth();\n      hoverHeight = this.el.outerHeight();\n      left = Math.min(Math.max(0, x - hoverWidth / 2), parentWidth - hoverWidth);\n      if (y != null) {\n        top = y - hoverHeight - 10;\n        if (top < 0) {\n          top = y + 10;\n          if (top + hoverHeight > parentHeight) {\n            top = parentHeight / 2 - hoverHeight / 2;\n          }\n        }\n      } else {\n        top = parentHeight / 2 - hoverHeight / 2;\n      }\n      return this.el.css({\n        left: left + \"px\",\n        top: parseInt(top) + \"px\"\n      });\n    };\n\n    Hover.prototype.show = function() {\n      return this.el.show();\n    };\n\n    Hover.prototype.hide = function() {\n      return this.el.hide();\n    };\n\n    return Hover;\n\n  })();\n\n  Morris.Line = (function(_super) {\n    __extends(Line, _super);\n\n    function Line(options) {\n      this.hilight = __bind(this.hilight, this);\n      this.onHoverOut = __bind(this.onHoverOut, this);\n      this.onHoverMove = __bind(this.onHoverMove, this);\n      this.onGridClick = __bind(this.onGridClick, this);\n      if (!(this instanceof Morris.Line)) {\n        return new Morris.Line(options);\n      }\n      Line.__super__.constructor.call(this, options);\n    }\n\n    Line.prototype.init = function() {\n      if (this.options.hideHover !== 'always') {\n        this.hover = new Morris.Hover({\n          parent: this.el\n        });\n        this.on('hovermove', this.onHoverMove);\n        this.on('hoverout', this.onHoverOut);\n        return this.on('gridclick', this.onGridClick);\n      }\n    };\n\n    Line.prototype.defaults = {\n      lineWidth: 3,\n      pointSize: 4,\n      lineColors: ['#0b62a4', '#7A92A3', '#4da74d', '#afd8f8', '#edc240', '#cb4b4b', '#9440ed'],\n      pointStrokeWidths: [1],\n      pointStrokeColors: ['#ffffff'],\n      pointFillColors: [],\n      smooth: true,\n      xLabels: 'auto',\n      xLabelFormat: null,\n      xLabelMargin: 24,\n      hideHover: false\n    };\n\n    Line.prototype.calc = function() {\n      this.calcPoints();\n      return this.generatePaths();\n    };\n\n    Line.prototype.calcPoints = function() {\n      var row, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        row._x = this.transX(row.x);\n        row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(this.transY(y));\n            } else {\n              _results1.push(y);\n            }\n          }\n          return _results1;\n        }).call(this);\n        _results.push(row._ymax = Math.min.apply(Math, [this.bottom].concat((function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row._y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(y);\n            }\n          }\n          return _results1;\n        })())));\n      }\n      return _results;\n    };\n\n    Line.prototype.hitTest = function(x) {\n      var index, r, _i, _len, _ref;\n      if (this.data.length === 0) {\n        return null;\n      }\n      _ref = this.data.slice(1);\n      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {\n        r = _ref[index];\n        if (x < (r._x + this.data[index]._x) / 2) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    Line.prototype.onGridClick = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.fire('click', index, this.data[index].src, x, y);\n    };\n\n    Line.prototype.onHoverMove = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.displayHoverForRow(index);\n    };\n\n    Line.prototype.onHoverOut = function() {\n      if (this.options.hideHover !== false) {\n        return this.displayHoverForRow(null);\n      }\n    };\n\n    Line.prototype.displayHoverForRow = function(index) {\n      var _ref;\n      if (index != null) {\n        (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\n        return this.hilight(index);\n      } else {\n        this.hover.hide();\n        return this.hilight();\n      }\n    };\n\n    Line.prototype.hoverContentForRow = function(index) {\n      var content, j, row, y, _i, _len, _ref;\n      row = this.data[index];\n      content = \"<div class='morris-hover-row-label'>\" + row.label + \"</div>\";\n      _ref = row.y;\n      for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {\n        y = _ref[j];\n        content += \"<div class='morris-hover-point' style='color: \" + (this.colorFor(row, j, 'label')) + \"'>\\n  \" + this.options.labels[j] + \":\\n  \" + (this.yLabelFormat(y)) + \"\\n</div>\";\n      }\n      if (typeof this.options.hoverCallback === 'function') {\n        content = this.options.hoverCallback(index, this.options, content, row.src);\n      }\n      return [content, row._x, row._ymax];\n    };\n\n    Line.prototype.generatePaths = function() {\n      var coords, i, r, smooth;\n      return this.paths = (function() {\n        var _i, _ref, _ref1, _results;\n        _results = [];\n        for (i = _i = 0, _ref = this.options.ykeys.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n          smooth = typeof this.options.smooth === \"boolean\" ? this.options.smooth : (_ref1 = this.options.ykeys[i], __indexOf.call(this.options.smooth, _ref1) >= 0);\n          coords = (function() {\n            var _j, _len, _ref2, _results1;\n            _ref2 = this.data;\n            _results1 = [];\n            for (_j = 0, _len = _ref2.length; _j < _len; _j++) {\n              r = _ref2[_j];\n              if (r._y[i] !== void 0) {\n                _results1.push({\n                  x: r._x,\n                  y: r._y[i]\n                });\n              }\n            }\n            return _results1;\n          }).call(this);\n          if (coords.length > 1) {\n            _results.push(Morris.Line.createPath(coords, smooth, this.bottom));\n          } else {\n            _results.push(null);\n          }\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Line.prototype.draw = function() {\n      var _ref;\n      if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\n        this.drawXAxis();\n      }\n      this.drawSeries();\n      if (this.options.hideHover === false) {\n        return this.displayHoverForRow(this.data.length - 1);\n      }\n    };\n\n    Line.prototype.drawXAxis = function() {\n      var drawLabel, l, labels, prevAngleMargin, prevLabelMargin, row, ypos, _i, _len, _results,\n        _this = this;\n      ypos = this.bottom + this.options.padding / 2;\n      prevLabelMargin = null;\n      prevAngleMargin = null;\n      drawLabel = function(labelText, xpos) {\n        var label, labelBox, margin, offset, textBox;\n        label = _this.drawXAxisLabel(_this.transX(xpos), ypos, labelText);\n        textBox = label.getBBox();\n        label.transform(\"r\" + (-_this.options.xLabelAngle));\n        labelBox = label.getBBox();\n        label.transform(\"t0,\" + (labelBox.height / 2) + \"...\");\n        if (_this.options.xLabelAngle !== 0) {\n          offset = -0.5 * textBox.width * Math.cos(_this.options.xLabelAngle * Math.PI / 180.0);\n          label.transform(\"t\" + offset + \",0...\");\n        }\n        labelBox = label.getBBox();\n        if (((prevLabelMargin == null) || prevLabelMargin >= labelBox.x + labelBox.width || (prevAngleMargin != null) && prevAngleMargin >= labelBox.x) && labelBox.x >= 0 && (labelBox.x + labelBox.width) < _this.el.width()) {\n          if (_this.options.xLabelAngle !== 0) {\n            margin = 1.25 * _this.options.gridTextSize / Math.sin(_this.options.xLabelAngle * Math.PI / 180.0);\n            prevAngleMargin = labelBox.x - margin;\n          }\n          return prevLabelMargin = labelBox.x - _this.options.xLabelMargin;\n        } else {\n          return label.remove();\n        }\n      };\n      if (this.options.parseTime) {\n        if (this.data.length === 1 && this.options.xLabels === 'auto') {\n          labels = [[this.data[0].label, this.data[0].x]];\n        } else {\n          labels = Morris.labelSeries(this.xmin, this.xmax, this.width, this.options.xLabels, this.options.xLabelFormat);\n        }\n      } else {\n        labels = (function() {\n          var _i, _len, _ref, _results;\n          _ref = this.data;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            row = _ref[_i];\n            _results.push([row.label, row.x]);\n          }\n          return _results;\n        }).call(this);\n      }\n      labels.reverse();\n      _results = [];\n      for (_i = 0, _len = labels.length; _i < _len; _i++) {\n        l = labels[_i];\n        _results.push(drawLabel(l[0], l[1]));\n      }\n      return _results;\n    };\n\n    Line.prototype.drawSeries = function() {\n      var i, _i, _j, _ref, _ref1, _results;\n      this.seriesPoints = [];\n      for (i = _i = _ref = this.options.ykeys.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {\n        this._drawLineFor(i);\n      }\n      _results = [];\n      for (i = _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; i = _ref1 <= 0 ? ++_j : --_j) {\n        _results.push(this._drawPointFor(i));\n      }\n      return _results;\n    };\n\n    Line.prototype._drawPointFor = function(index) {\n      var circle, row, _i, _len, _ref, _results;\n      this.seriesPoints[index] = [];\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        circle = null;\n        if (row._y[index] != null) {\n          circle = this.drawLinePoint(row._x, row._y[index], this.colorFor(row, index, 'point'), index);\n        }\n        _results.push(this.seriesPoints[index].push(circle));\n      }\n      return _results;\n    };\n\n    Line.prototype._drawLineFor = function(index) {\n      var path;\n      path = this.paths[index];\n      if (path !== null) {\n        return this.drawLinePath(path, this.colorFor(null, index, 'line'), index);\n      }\n    };\n\n    Line.createPath = function(coords, smooth, bottom) {\n      var coord, g, grads, i, ix, lg, path, prevCoord, x1, x2, y1, y2, _i, _len;\n      path = \"\";\n      if (smooth) {\n        grads = Morris.Line.gradients(coords);\n      }\n      prevCoord = {\n        y: null\n      };\n      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\n        coord = coords[i];\n        if (coord.y != null) {\n          if (prevCoord.y != null) {\n            if (smooth) {\n              g = grads[i];\n              lg = grads[i - 1];\n              ix = (coord.x - prevCoord.x) / 4;\n              x1 = prevCoord.x + ix;\n              y1 = Math.min(bottom, prevCoord.y + ix * lg);\n              x2 = coord.x - ix;\n              y2 = Math.min(bottom, coord.y - ix * g);\n              path += \"C\" + x1 + \",\" + y1 + \",\" + x2 + \",\" + y2 + \",\" + coord.x + \",\" + coord.y;\n            } else {\n              path += \"L\" + coord.x + \",\" + coord.y;\n            }\n          } else {\n            if (!smooth || (grads[i] != null)) {\n              path += \"M\" + coord.x + \",\" + coord.y;\n            }\n          }\n        }\n        prevCoord = coord;\n      }\n      return path;\n    };\n\n    Line.gradients = function(coords) {\n      var coord, grad, i, nextCoord, prevCoord, _i, _len, _results;\n      grad = function(a, b) {\n        return (a.y - b.y) / (a.x - b.x);\n      };\n      _results = [];\n      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\n        coord = coords[i];\n        if (coord.y != null) {\n          nextCoord = coords[i + 1] || {\n            y: null\n          };\n          prevCoord = coords[i - 1] || {\n            y: null\n          };\n          if ((prevCoord.y != null) && (nextCoord.y != null)) {\n            _results.push(grad(prevCoord, nextCoord));\n          } else if (prevCoord.y != null) {\n            _results.push(grad(prevCoord, coord));\n          } else if (nextCoord.y != null) {\n            _results.push(grad(coord, nextCoord));\n          } else {\n            _results.push(null);\n          }\n        } else {\n          _results.push(null);\n        }\n      }\n      return _results;\n    };\n\n    Line.prototype.hilight = function(index) {\n      var i, _i, _j, _ref, _ref1;\n      if (this.prevHilight !== null && this.prevHilight !== index) {\n        for (i = _i = 0, _ref = this.seriesPoints.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n          if (this.seriesPoints[i][this.prevHilight]) {\n            this.seriesPoints[i][this.prevHilight].animate(this.pointShrinkSeries(i));\n          }\n        }\n      }\n      if (index !== null && this.prevHilight !== index) {\n        for (i = _j = 0, _ref1 = this.seriesPoints.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n          if (this.seriesPoints[i][index]) {\n            this.seriesPoints[i][index].animate(this.pointGrowSeries(i));\n          }\n        }\n      }\n      return this.prevHilight = index;\n    };\n\n    Line.prototype.colorFor = function(row, sidx, type) {\n      if (typeof this.options.lineColors === 'function') {\n        return this.options.lineColors.call(this, row, sidx, type);\n      } else if (type === 'point') {\n        return this.options.pointFillColors[sidx % this.options.pointFillColors.length] || this.options.lineColors[sidx % this.options.lineColors.length];\n      } else {\n        return this.options.lineColors[sidx % this.options.lineColors.length];\n      }\n    };\n\n    Line.prototype.drawXAxisLabel = function(xPos, yPos, text) {\n      return this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\n    };\n\n    Line.prototype.drawLinePath = function(path, lineColor, lineIndex) {\n      return this.raphael.path(path).attr('stroke', lineColor).attr('stroke-width', this.lineWidthForSeries(lineIndex));\n    };\n\n    Line.prototype.drawLinePoint = function(xPos, yPos, pointColor, lineIndex) {\n      return this.raphael.circle(xPos, yPos, this.pointSizeForSeries(lineIndex)).attr('fill', pointColor).attr('stroke-width', this.pointStrokeWidthForSeries(lineIndex)).attr('stroke', this.pointStrokeColorForSeries(lineIndex));\n    };\n\n    Line.prototype.pointStrokeWidthForSeries = function(index) {\n      return this.options.pointStrokeWidths[index % this.options.pointStrokeWidths.length];\n    };\n\n    Line.prototype.pointStrokeColorForSeries = function(index) {\n      return this.options.pointStrokeColors[index % this.options.pointStrokeColors.length];\n    };\n\n    Line.prototype.lineWidthForSeries = function(index) {\n      if (this.options.lineWidth instanceof Array) {\n        return this.options.lineWidth[index % this.options.lineWidth.length];\n      } else {\n        return this.options.lineWidth;\n      }\n    };\n\n    Line.prototype.pointSizeForSeries = function(index) {\n      if (this.options.pointSize instanceof Array) {\n        return this.options.pointSize[index % this.options.pointSize.length];\n      } else {\n        return this.options.pointSize;\n      }\n    };\n\n    Line.prototype.pointGrowSeries = function(index) {\n      return Raphael.animation({\n        r: this.pointSizeForSeries(index) + 3\n      }, 25, 'linear');\n    };\n\n    Line.prototype.pointShrinkSeries = function(index) {\n      return Raphael.animation({\n        r: this.pointSizeForSeries(index)\n      }, 25, 'linear');\n    };\n\n    return Line;\n\n  })(Morris.Grid);\n\n  Morris.labelSeries = function(dmin, dmax, pxwidth, specName, xLabelFormat) {\n    var d, d0, ddensity, name, ret, s, spec, t, _i, _len, _ref;\n    ddensity = 200 * (dmax - dmin) / pxwidth;\n    d0 = new Date(dmin);\n    spec = Morris.LABEL_SPECS[specName];\n    if (spec === void 0) {\n      _ref = Morris.AUTO_LABEL_ORDER;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        name = _ref[_i];\n        s = Morris.LABEL_SPECS[name];\n        if (ddensity >= s.span) {\n          spec = s;\n          break;\n        }\n      }\n    }\n    if (spec === void 0) {\n      spec = Morris.LABEL_SPECS[\"second\"];\n    }\n    if (xLabelFormat) {\n      spec = $.extend({}, spec, {\n        fmt: xLabelFormat\n      });\n    }\n    d = spec.start(d0);\n    ret = [];\n    while ((t = d.getTime()) <= dmax) {\n      if (t >= dmin) {\n        ret.push([spec.fmt(d), t]);\n      }\n      spec.incr(d);\n    }\n    return ret;\n  };\n\n  minutesSpecHelper = function(interval) {\n    return {\n      span: interval * 60 * 1000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours());\n      },\n      fmt: function(d) {\n        return \"\" + (Morris.pad2(d.getHours())) + \":\" + (Morris.pad2(d.getMinutes()));\n      },\n      incr: function(d) {\n        return d.setUTCMinutes(d.getUTCMinutes() + interval);\n      }\n    };\n  };\n\n  secondsSpecHelper = function(interval) {\n    return {\n      span: interval * 1000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes());\n      },\n      fmt: function(d) {\n        return \"\" + (Morris.pad2(d.getHours())) + \":\" + (Morris.pad2(d.getMinutes())) + \":\" + (Morris.pad2(d.getSeconds()));\n      },\n      incr: function(d) {\n        return d.setUTCSeconds(d.getUTCSeconds() + interval);\n      }\n    };\n  };\n\n  Morris.LABEL_SPECS = {\n    \"decade\": {\n      span: 172800000000,\n      start: function(d) {\n        return new Date(d.getFullYear() - d.getFullYear() % 10, 0, 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear());\n      },\n      incr: function(d) {\n        return d.setFullYear(d.getFullYear() + 10);\n      }\n    },\n    \"year\": {\n      span: 17280000000,\n      start: function(d) {\n        return new Date(d.getFullYear(), 0, 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear());\n      },\n      incr: function(d) {\n        return d.setFullYear(d.getFullYear() + 1);\n      }\n    },\n    \"month\": {\n      span: 2419200000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1));\n      },\n      incr: function(d) {\n        return d.setMonth(d.getMonth() + 1);\n      }\n    },\n    \"week\": {\n      span: 604800000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1)) + \"-\" + (Morris.pad2(d.getDate()));\n      },\n      incr: function(d) {\n        return d.setDate(d.getDate() + 7);\n      }\n    },\n    \"day\": {\n      span: 86400000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1)) + \"-\" + (Morris.pad2(d.getDate()));\n      },\n      incr: function(d) {\n        return d.setDate(d.getDate() + 1);\n      }\n    },\n    \"hour\": minutesSpecHelper(60),\n    \"30min\": minutesSpecHelper(30),\n    \"15min\": minutesSpecHelper(15),\n    \"10min\": minutesSpecHelper(10),\n    \"5min\": minutesSpecHelper(5),\n    \"minute\": minutesSpecHelper(1),\n    \"30sec\": secondsSpecHelper(30),\n    \"15sec\": secondsSpecHelper(15),\n    \"10sec\": secondsSpecHelper(10),\n    \"5sec\": secondsSpecHelper(5),\n    \"second\": secondsSpecHelper(1)\n  };\n\n  Morris.AUTO_LABEL_ORDER = [\"decade\", \"year\", \"month\", \"week\", \"day\", \"hour\", \"30min\", \"15min\", \"10min\", \"5min\", \"minute\", \"30sec\", \"15sec\", \"10sec\", \"5sec\", \"second\"];\n\n  Morris.Area = (function(_super) {\n    var areaDefaults;\n\n    __extends(Area, _super);\n\n    areaDefaults = {\n      fillOpacity: 'auto',\n      behaveLikeLine: false\n    };\n\n    function Area(options) {\n      var areaOptions;\n      if (!(this instanceof Morris.Area)) {\n        return new Morris.Area(options);\n      }\n      areaOptions = $.extend({}, areaDefaults, options);\n      this.cumulative = !areaOptions.behaveLikeLine;\n      if (areaOptions.fillOpacity === 'auto') {\n        areaOptions.fillOpacity = areaOptions.behaveLikeLine ? .8 : 1;\n      }\n      Area.__super__.constructor.call(this, areaOptions);\n    }\n\n    Area.prototype.calcPoints = function() {\n      var row, total, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        row._x = this.transX(row.x);\n        total = 0;\n        row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (this.options.behaveLikeLine) {\n              _results1.push(this.transY(y));\n            } else {\n              total += y || 0;\n              _results1.push(this.transY(total));\n            }\n          }\n          return _results1;\n        }).call(this);\n        _results.push(row._ymax = Math.max.apply(Math, row._y));\n      }\n      return _results;\n    };\n\n    Area.prototype.drawSeries = function() {\n      var i, range, _i, _j, _k, _len, _ref, _ref1, _results, _results1, _results2;\n      this.seriesPoints = [];\n      if (this.options.behaveLikeLine) {\n        range = (function() {\n          _results = [];\n          for (var _i = 0, _ref = this.options.ykeys.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n          return _results;\n        }).apply(this);\n      } else {\n        range = (function() {\n          _results1 = [];\n          for (var _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; _ref1 <= 0 ? _j++ : _j--){ _results1.push(_j); }\n          return _results1;\n        }).apply(this);\n      }\n      _results2 = [];\n      for (_k = 0, _len = range.length; _k < _len; _k++) {\n        i = range[_k];\n        this._drawFillFor(i);\n        this._drawLineFor(i);\n        _results2.push(this._drawPointFor(i));\n      }\n      return _results2;\n    };\n\n    Area.prototype._drawFillFor = function(index) {\n      var path;\n      path = this.paths[index];\n      if (path !== null) {\n        path = path + (\"L\" + (this.transX(this.xmax)) + \",\" + this.bottom + \"L\" + (this.transX(this.xmin)) + \",\" + this.bottom + \"Z\");\n        return this.drawFilledPath(path, this.fillForSeries(index));\n      }\n    };\n\n    Area.prototype.fillForSeries = function(i) {\n      var color;\n      color = Raphael.rgb2hsl(this.colorFor(this.data[i], i, 'line'));\n      return Raphael.hsl(color.h, this.options.behaveLikeLine ? color.s * 0.9 : color.s * 0.75, Math.min(0.98, this.options.behaveLikeLine ? color.l * 1.2 : color.l * 1.25));\n    };\n\n    Area.prototype.drawFilledPath = function(path, fill) {\n      return this.raphael.path(path).attr('fill', fill).attr('fill-opacity', this.options.fillOpacity).attr('stroke', 'none');\n    };\n\n    return Area;\n\n  })(Morris.Line);\n\n  Morris.Bar = (function(_super) {\n    __extends(Bar, _super);\n\n    function Bar(options) {\n      this.onHoverOut = __bind(this.onHoverOut, this);\n      this.onHoverMove = __bind(this.onHoverMove, this);\n      this.onGridClick = __bind(this.onGridClick, this);\n      if (!(this instanceof Morris.Bar)) {\n        return new Morris.Bar(options);\n      }\n      Bar.__super__.constructor.call(this, $.extend({}, options, {\n        parseTime: false\n      }));\n    }\n\n    Bar.prototype.init = function() {\n      this.cumulative = this.options.stacked;\n      if (this.options.hideHover !== 'always') {\n        this.hover = new Morris.Hover({\n          parent: this.el\n        });\n        this.on('hovermove', this.onHoverMove);\n        this.on('hoverout', this.onHoverOut);\n        return this.on('gridclick', this.onGridClick);\n      }\n    };\n\n    Bar.prototype.defaults = {\n      barSizeRatio: 0.75,\n      barGap: 3,\n      barColors: ['#0b62a4', '#7a92a3', '#4da74d', '#afd8f8', '#edc240', '#cb4b4b', '#9440ed'],\n      barOpacity: 1.0,\n      barRadius: [0, 0, 0, 0],\n      xLabelMargin: 50\n    };\n\n    Bar.prototype.calc = function() {\n      var _ref;\n      this.calcBars();\n      if (this.options.hideHover === false) {\n        return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(this.data.length - 1));\n      }\n    };\n\n    Bar.prototype.calcBars = function() {\n      var idx, row, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {\n        row = _ref[idx];\n        row._x = this.left + this.width * (idx + 0.5) / this.data.length;\n        _results.push(row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(this.transY(y));\n            } else {\n              _results1.push(null);\n            }\n          }\n          return _results1;\n        }).call(this));\n      }\n      return _results;\n    };\n\n    Bar.prototype.draw = function() {\n      var _ref;\n      if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\n        this.drawXAxis();\n      }\n      return this.drawSeries();\n    };\n\n    Bar.prototype.drawXAxis = function() {\n      var i, label, labelBox, margin, offset, prevAngleMargin, prevLabelMargin, row, textBox, ypos, _i, _ref, _results;\n      ypos = this.bottom + (this.options.xAxisLabelTopPadding || this.options.padding / 2);\n      prevLabelMargin = null;\n      prevAngleMargin = null;\n      _results = [];\n      for (i = _i = 0, _ref = this.data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n        row = this.data[this.data.length - 1 - i];\n        label = this.drawXAxisLabel(row._x, ypos, row.label);\n        textBox = label.getBBox();\n        label.transform(\"r\" + (-this.options.xLabelAngle));\n        labelBox = label.getBBox();\n        label.transform(\"t0,\" + (labelBox.height / 2) + \"...\");\n        if (this.options.xLabelAngle !== 0) {\n          offset = -0.5 * textBox.width * Math.cos(this.options.xLabelAngle * Math.PI / 180.0);\n          label.transform(\"t\" + offset + \",0...\");\n        }\n        if (((prevLabelMargin == null) || prevLabelMargin >= labelBox.x + labelBox.width || (prevAngleMargin != null) && prevAngleMargin >= labelBox.x) && labelBox.x >= 0 && (labelBox.x + labelBox.width) < this.el.width()) {\n          if (this.options.xLabelAngle !== 0) {\n            margin = 1.25 * this.options.gridTextSize / Math.sin(this.options.xLabelAngle * Math.PI / 180.0);\n            prevAngleMargin = labelBox.x - margin;\n          }\n          _results.push(prevLabelMargin = labelBox.x - this.options.xLabelMargin);\n        } else {\n          _results.push(label.remove());\n        }\n      }\n      return _results;\n    };\n\n    Bar.prototype.drawSeries = function() {\n      var barWidth, bottom, groupWidth, idx, lastTop, left, leftPadding, numBars, row, sidx, size, spaceLeft, top, ypos, zeroPos;\n      groupWidth = this.width / this.options.data.length;\n      numBars = this.options.stacked ? 1 : this.options.ykeys.length;\n      barWidth = (groupWidth * this.options.barSizeRatio - this.options.barGap * (numBars - 1)) / numBars;\n      if (this.options.barSize) {\n        barWidth = Math.min(barWidth, this.options.barSize);\n      }\n      spaceLeft = groupWidth - barWidth * numBars - this.options.barGap * (numBars - 1);\n      leftPadding = spaceLeft / 2;\n      zeroPos = this.ymin <= 0 && this.ymax >= 0 ? this.transY(0) : null;\n      return this.bars = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.data;\n        _results = [];\n        for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {\n          row = _ref[idx];\n          lastTop = 0;\n          _results.push((function() {\n            var _j, _len1, _ref1, _results1;\n            _ref1 = row._y;\n            _results1 = [];\n            for (sidx = _j = 0, _len1 = _ref1.length; _j < _len1; sidx = ++_j) {\n              ypos = _ref1[sidx];\n              if (ypos !== null) {\n                if (zeroPos) {\n                  top = Math.min(ypos, zeroPos);\n                  bottom = Math.max(ypos, zeroPos);\n                } else {\n                  top = ypos;\n                  bottom = this.bottom;\n                }\n                left = this.left + idx * groupWidth + leftPadding;\n                if (!this.options.stacked) {\n                  left += sidx * (barWidth + this.options.barGap);\n                }\n                size = bottom - top;\n                if (this.options.verticalGridCondition && this.options.verticalGridCondition(row.x)) {\n                  this.drawBar(this.left + idx * groupWidth, this.top, groupWidth, Math.abs(this.top - this.bottom), this.options.verticalGridColor, this.options.verticalGridOpacity, this.options.barRadius);\n                }\n                if (this.options.stacked) {\n                  top -= lastTop;\n                }\n                this.drawBar(left, top, barWidth, size, this.colorFor(row, sidx, 'bar'), this.options.barOpacity, this.options.barRadius);\n                _results1.push(lastTop += size);\n              } else {\n                _results1.push(null);\n              }\n            }\n            return _results1;\n          }).call(this));\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Bar.prototype.colorFor = function(row, sidx, type) {\n      var r, s;\n      if (typeof this.options.barColors === 'function') {\n        r = {\n          x: row.x,\n          y: row.y[sidx],\n          label: row.label\n        };\n        s = {\n          index: sidx,\n          key: this.options.ykeys[sidx],\n          label: this.options.labels[sidx]\n        };\n        return this.options.barColors.call(this, r, s, type);\n      } else {\n        return this.options.barColors[sidx % this.options.barColors.length];\n      }\n    };\n\n    Bar.prototype.hitTest = function(x) {\n      if (this.data.length === 0) {\n        return null;\n      }\n      x = Math.max(Math.min(x, this.right), this.left);\n      return Math.min(this.data.length - 1, Math.floor((x - this.left) / (this.width / this.data.length)));\n    };\n\n    Bar.prototype.onGridClick = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.fire('click', index, this.data[index].src, x, y);\n    };\n\n    Bar.prototype.onHoverMove = function(x, y) {\n      var index, _ref;\n      index = this.hitTest(x);\n      return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\n    };\n\n    Bar.prototype.onHoverOut = function() {\n      if (this.options.hideHover !== false) {\n        return this.hover.hide();\n      }\n    };\n\n    Bar.prototype.hoverContentForRow = function(index) {\n      var content, j, row, x, y, _i, _len, _ref;\n      row = this.data[index];\n      content = \"<div class='morris-hover-row-label'>\" + row.label + \"</div>\";\n      _ref = row.y;\n      for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {\n        y = _ref[j];\n        content += \"<div class='morris-hover-point' style='color: \" + (this.colorFor(row, j, 'label')) + \"'>\\n  \" + this.options.labels[j] + \":\\n  \" + (this.yLabelFormat(y)) + \"\\n</div>\";\n      }\n      if (typeof this.options.hoverCallback === 'function') {\n        content = this.options.hoverCallback(index, this.options, content, row.src);\n      }\n      x = this.left + (index + 0.5) * this.width / this.data.length;\n      return [content, x];\n    };\n\n    Bar.prototype.drawXAxisLabel = function(xPos, yPos, text) {\n      var label;\n      return label = this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\n    };\n\n    Bar.prototype.drawBar = function(xPos, yPos, width, height, barColor, opacity, radiusArray) {\n      var maxRadius, path;\n      maxRadius = Math.max.apply(Math, radiusArray);\n      if (maxRadius === 0 || maxRadius > height) {\n        path = this.raphael.rect(xPos, yPos, width, height);\n      } else {\n        path = this.raphael.path(this.roundedRect(xPos, yPos, width, height, radiusArray));\n      }\n      return path.attr('fill', barColor).attr('fill-opacity', opacity).attr('stroke', 'none');\n    };\n\n    Bar.prototype.roundedRect = function(x, y, w, h, r) {\n      if (r == null) {\n        r = [0, 0, 0, 0];\n      }\n      return [\"M\", x, r[0] + y, \"Q\", x, y, x + r[0], y, \"L\", x + w - r[1], y, \"Q\", x + w, y, x + w, y + r[1], \"L\", x + w, y + h - r[2], \"Q\", x + w, y + h, x + w - r[2], y + h, \"L\", x + r[3], y + h, \"Q\", x, y + h, x, y + h - r[3], \"Z\"];\n    };\n\n    return Bar;\n\n  })(Morris.Grid);\n\n  Morris.Donut = (function(_super) {\n    __extends(Donut, _super);\n\n    Donut.prototype.defaults = {\n      colors: ['#0B62A4', '#3980B5', '#679DC6', '#95BBD7', '#B0CCE1', '#095791', '#095085', '#083E67', '#052C48', '#042135'],\n      backgroundColor: '#FFFFFF',\n      labelColor: '#000000',\n      formatter: Morris.commas,\n      resize: false\n    };\n\n    function Donut(options) {\n      this.resizeHandler = __bind(this.resizeHandler, this);\n      this.select = __bind(this.select, this);\n      this.click = __bind(this.click, this);\n      var _this = this;\n      if (!(this instanceof Morris.Donut)) {\n        return new Morris.Donut(options);\n      }\n      this.options = $.extend({}, this.defaults, options);\n      if (typeof options.element === 'string') {\n        this.el = $(document.getElementById(options.element));\n      } else {\n        this.el = $(options.element);\n      }\n      if (this.el === null || this.el.length === 0) {\n        throw new Error(\"Graph placeholder not found.\");\n      }\n      if (options.data === void 0 || options.data.length === 0) {\n        return;\n      }\n      this.raphael = new Raphael(this.el[0]);\n      if (this.options.resize) {\n        $(window).bind('resize', function(evt) {\n          if (_this.timeoutId != null) {\n            window.clearTimeout(_this.timeoutId);\n          }\n          return _this.timeoutId = window.setTimeout(_this.resizeHandler, 100);\n        });\n      }\n      this.setData(options.data);\n    }\n\n    Donut.prototype.redraw = function() {\n      var C, cx, cy, i, idx, last, max_value, min, next, seg, total, value, w, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\n      this.raphael.clear();\n      cx = this.el.width() / 2;\n      cy = this.el.height() / 2;\n      w = (Math.min(cx, cy) - 10) / 3;\n      total = 0;\n      _ref = this.values;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        value = _ref[_i];\n        total += value;\n      }\n      min = 5 / (2 * w);\n      C = 1.9999 * Math.PI - min * this.data.length;\n      last = 0;\n      idx = 0;\n      this.segments = [];\n      _ref1 = this.values;\n      for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n        value = _ref1[i];\n        next = last + min + C * (value / total);\n        seg = new Morris.DonutSegment(cx, cy, w * 2, w, last, next, this.data[i].color || this.options.colors[idx % this.options.colors.length], this.options.backgroundColor, idx, this.raphael);\n        seg.render();\n        this.segments.push(seg);\n        seg.on('hover', this.select);\n        seg.on('click', this.click);\n        last = next;\n        idx += 1;\n      }\n      this.text1 = this.drawEmptyDonutLabel(cx, cy - 10, this.options.labelColor, 15, 800);\n      this.text2 = this.drawEmptyDonutLabel(cx, cy + 10, this.options.labelColor, 14);\n      max_value = Math.max.apply(Math, this.values);\n      idx = 0;\n      _ref2 = this.values;\n      _results = [];\n      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n        value = _ref2[_k];\n        if (value === max_value) {\n          this.select(idx);\n          break;\n        }\n        _results.push(idx += 1);\n      }\n      return _results;\n    };\n\n    Donut.prototype.setData = function(data) {\n      var row;\n      this.data = data;\n      this.values = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.data;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          row = _ref[_i];\n          _results.push(parseFloat(row.value));\n        }\n        return _results;\n      }).call(this);\n      return this.redraw();\n    };\n\n    Donut.prototype.click = function(idx) {\n      return this.fire('click', idx, this.data[idx]);\n    };\n\n    Donut.prototype.select = function(idx) {\n      var row, s, segment, _i, _len, _ref;\n      _ref = this.segments;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        s = _ref[_i];\n        s.deselect();\n      }\n      segment = this.segments[idx];\n      segment.select();\n      row = this.data[idx];\n      return this.setLabels(row.label, this.options.formatter(row.value, row));\n    };\n\n    Donut.prototype.setLabels = function(label1, label2) {\n      var inner, maxHeightBottom, maxHeightTop, maxWidth, text1bbox, text1scale, text2bbox, text2scale;\n      inner = (Math.min(this.el.width() / 2, this.el.height() / 2) - 10) * 2 / 3;\n      maxWidth = 1.8 * inner;\n      maxHeightTop = inner / 2;\n      maxHeightBottom = inner / 3;\n      this.text1.attr({\n        text: label1,\n        transform: ''\n      });\n      text1bbox = this.text1.getBBox();\n      text1scale = Math.min(maxWidth / text1bbox.width, maxHeightTop / text1bbox.height);\n      this.text1.attr({\n        transform: \"S\" + text1scale + \",\" + text1scale + \",\" + (text1bbox.x + text1bbox.width / 2) + \",\" + (text1bbox.y + text1bbox.height)\n      });\n      this.text2.attr({\n        text: label2,\n        transform: ''\n      });\n      text2bbox = this.text2.getBBox();\n      text2scale = Math.min(maxWidth / text2bbox.width, maxHeightBottom / text2bbox.height);\n      return this.text2.attr({\n        transform: \"S\" + text2scale + \",\" + text2scale + \",\" + (text2bbox.x + text2bbox.width / 2) + \",\" + text2bbox.y\n      });\n    };\n\n    Donut.prototype.drawEmptyDonutLabel = function(xPos, yPos, color, fontSize, fontWeight) {\n      var text;\n      text = this.raphael.text(xPos, yPos, '').attr('font-size', fontSize).attr('fill', color);\n      if (fontWeight != null) {\n        text.attr('font-weight', fontWeight);\n      }\n      return text;\n    };\n\n    Donut.prototype.resizeHandler = function() {\n      this.timeoutId = null;\n      this.raphael.setSize(this.el.width(), this.el.height());\n      return this.redraw();\n    };\n\n    return Donut;\n\n  })(Morris.EventEmitter);\n\n  Morris.DonutSegment = (function(_super) {\n    __extends(DonutSegment, _super);\n\n    function DonutSegment(cx, cy, inner, outer, p0, p1, color, backgroundColor, index, raphael) {\n      this.cx = cx;\n      this.cy = cy;\n      this.inner = inner;\n      this.outer = outer;\n      this.color = color;\n      this.backgroundColor = backgroundColor;\n      this.index = index;\n      this.raphael = raphael;\n      this.deselect = __bind(this.deselect, this);\n      this.select = __bind(this.select, this);\n      this.sin_p0 = Math.sin(p0);\n      this.cos_p0 = Math.cos(p0);\n      this.sin_p1 = Math.sin(p1);\n      this.cos_p1 = Math.cos(p1);\n      this.is_long = (p1 - p0) > Math.PI ? 1 : 0;\n      this.path = this.calcSegment(this.inner + 3, this.inner + this.outer - 5);\n      this.selectedPath = this.calcSegment(this.inner + 3, this.inner + this.outer);\n      this.hilight = this.calcArc(this.inner);\n    }\n\n    DonutSegment.prototype.calcArcPoints = function(r) {\n      return [this.cx + r * this.sin_p0, this.cy + r * this.cos_p0, this.cx + r * this.sin_p1, this.cy + r * this.cos_p1];\n    };\n\n    DonutSegment.prototype.calcSegment = function(r1, r2) {\n      var ix0, ix1, iy0, iy1, ox0, ox1, oy0, oy1, _ref, _ref1;\n      _ref = this.calcArcPoints(r1), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\n      _ref1 = this.calcArcPoints(r2), ox0 = _ref1[0], oy0 = _ref1[1], ox1 = _ref1[2], oy1 = _ref1[3];\n      return (\"M\" + ix0 + \",\" + iy0) + (\"A\" + r1 + \",\" + r1 + \",0,\" + this.is_long + \",0,\" + ix1 + \",\" + iy1) + (\"L\" + ox1 + \",\" + oy1) + (\"A\" + r2 + \",\" + r2 + \",0,\" + this.is_long + \",1,\" + ox0 + \",\" + oy0) + \"Z\";\n    };\n\n    DonutSegment.prototype.calcArc = function(r) {\n      var ix0, ix1, iy0, iy1, _ref;\n      _ref = this.calcArcPoints(r), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\n      return (\"M\" + ix0 + \",\" + iy0) + (\"A\" + r + \",\" + r + \",0,\" + this.is_long + \",0,\" + ix1 + \",\" + iy1);\n    };\n\n    DonutSegment.prototype.render = function() {\n      var _this = this;\n      this.arc = this.drawDonutArc(this.hilight, this.color);\n      return this.seg = this.drawDonutSegment(this.path, this.color, this.backgroundColor, function() {\n        return _this.fire('hover', _this.index);\n      }, function() {\n        return _this.fire('click', _this.index);\n      });\n    };\n\n    DonutSegment.prototype.drawDonutArc = function(path, color) {\n      return this.raphael.path(path).attr({\n        stroke: color,\n        'stroke-width': 2,\n        opacity: 0\n      });\n    };\n\n    DonutSegment.prototype.drawDonutSegment = function(path, fillColor, strokeColor, hoverFunction, clickFunction) {\n      return this.raphael.path(path).attr({\n        fill: fillColor,\n        stroke: strokeColor,\n        'stroke-width': 3\n      }).hover(hoverFunction).click(clickFunction);\n    };\n\n    DonutSegment.prototype.select = function() {\n      if (!this.selected) {\n        this.seg.animate({\n          path: this.selectedPath\n        }, 150, '<>');\n        this.arc.animate({\n          opacity: 1\n        }, 150, '<>');\n        return this.selected = true;\n      }\n    };\n\n    DonutSegment.prototype.deselect = function() {\n      if (this.selected) {\n        this.seg.animate({\n          path: this.path\n        }, 150, '<>');\n        this.arc.animate({\n          opacity: 0\n        }, 150, '<>');\n        return this.selected = false;\n      }\n    };\n\n    return DonutSegment;\n\n  })(Morris.EventEmitter);\n\n}).call(this);\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(12);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(18)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../css-loader/index.js!./morris.css\", function() {\n\t\t\tvar newContent = require(\"!!./../css-loader/index.js!./morris.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* script */\n__vue_exports__ = __webpack_require__(8)\n\n/* template */\nvar __vue_template__ = __webpack_require__(17)\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* script */\n__vue_exports__ = __webpack_require__(9)\n\n/* template */\nvar __vue_template__ = __webpack_require__(16)\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* script */\n__vue_exports__ = __webpack_require__(10)\n\n/* template */\nvar __vue_template__ = __webpack_require__(15)\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* script */\n__vue_exports__ = __webpack_require__(11)\n\n/* template */\nvar __vue_template__ = __webpack_require__(14)\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(2);\n\n__webpack_require__(3);\n\nvar _converter = __webpack_require__(1);\n\nvar _converter2 = _interopRequireDefault(_converter);\n\nvar _chartProps = __webpack_require__(0);\n\nvar _chartProps2 = _interopRequireDefault(_chartProps);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'area-chart',\n\n  mixins: [_chartProps2.default.area],\n\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n\n  watch: {\n    data: function data(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.chart.setData(_converter2.default.toObject(_this.data));\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    var options = {\n      element: this.id,\n      data: _converter2.default.toObject(this.data),\n      resize: _converter2.default.toBoolean(this.resize),\n      labels: _converter2.default.toObject(this.labels),\n      xkey: this.xkey,\n      ykeys: _converter2.default.toObject(this.ykeys),\n      grid: _converter2.default.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: _converter2.default.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight\n    };\n\n    if (this.lineColors) {\n      options.lineColors = _converter2.default.toObject(this.lineColors);\n    }\n\n    if (this.xLabels) {\n      options.xLabels = this.xLabels;\n    }\n\n    this.chart = Morris.Area(options);\n  }\n};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(2);\n\n__webpack_require__(3);\n\nvar _converter = __webpack_require__(1);\n\nvar _converter2 = _interopRequireDefault(_converter);\n\nvar _chartProps = __webpack_require__(0);\n\nvar _chartProps2 = _interopRequireDefault(_chartProps);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'bar-chart',\n\n  mixins: [_chartProps2.default.bar],\n\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n\n  watch: {\n    data: function data(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.chart.setData(_this.data);\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    var options = {\n      element: this.id,\n      data: _converter2.default.toObject(this.data),\n      labels: _converter2.default.toObject(this.labels),\n      resize: _converter2.default.toBoolean(this.resize),\n      xkey: this.xkey,\n      ykeys: _converter2.default.toObject(this.ykeys),\n      axes: _converter2.default.toBoolean(this.axes),\n      hideHover: this.hideHover,\n      stacked: _converter2.default.toBoolean(this.stacked),\n      grid: _converter2.default.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: _converter2.default.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight\n    };\n\n    if (this.barColors) {\n      options.barColors = _converter2.default.toObject(this.barColors);\n    }\n\n    if (this.hoverCallback) {\n      options.hoverCallback = this.hoverCallback;\n    }\n\n    this.chart = Morris.Bar(options);\n  }\n};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(2);\n\n__webpack_require__(3);\n\nvar _converter = __webpack_require__(1);\n\nvar _converter2 = _interopRequireDefault(_converter);\n\nvar _chartProps = __webpack_require__(0);\n\nvar _chartProps2 = _interopRequireDefault(_chartProps);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'donut-chart',\n\n  mixins: [_chartProps2.default.donut],\n\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n\n  watch: {\n    data: function data(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.chart.setData(_converter2.default.toObject(_this.data));\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    var options = {\n      element: this.id,\n      data: _converter2.default.toObject(this.data),\n      resize: _converter2.default.toBoolean(this.resize)\n    };\n\n    if (this.colors) {\n      options.colors = _converter2.default.toObject(this.colors);\n    }\n\n    if (this.formatter) {\n      options.formatter = this.formatter;\n    }\n\n    this.chart = Morris.Donut(options);\n  }\n};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(2);\n\n__webpack_require__(3);\n\nvar _converter = __webpack_require__(1);\n\nvar _converter2 = _interopRequireDefault(_converter);\n\nvar _chartProps = __webpack_require__(0);\n\nvar _chartProps2 = _interopRequireDefault(_chartProps);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'line-chart',\n\n  mixins: [_chartProps2.default.line],\n\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n\n  watch: {\n    data: function data(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.chart.setData(_converter2.default.toObject(_this.data));\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    var options = {\n      element: this.id,\n      data: _converter2.default.toObject(this.data),\n      resize: _converter2.default.toBoolean(this.resize),\n      labels: _converter2.default.toObject(this.labels),\n      xkey: this.xkey,\n      ykeys: _converter2.default.toObject(this.ykeys),\n      grid: _converter2.default.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: _converter2.default.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight\n    };\n\n    if (this.lineColors) {\n      options.lineColors = _converter2.default.toObject(this.lineColors);\n    }\n\n    if (this.xLabels) {\n      options.xLabels = this.xLabels;\n    }\n\n    this.chart = Morris.Line(options);\n  }\n};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(13)();\n// imports\n\n\n// module\nexports.push([module.i, \".morris-hover{position:absolute;z-index:1000}.morris-hover.morris-default-style{border-radius:10px;padding:6px;color:#666;background:hsla(0,0%,100%,.8);border:2px solid hsla(0,0%,90%,.8);font-family:sans-serif;font-size:12px;text-align:center}.morris-hover.morris-default-style .morris-hover-row-label{font-weight:700;margin:.25em 0}.morris-hover.morris-default-style .morris-hover-point{white-space:nowrap;margin:.1em 0}\", \"\"]);\n\n// exports\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _donutChart = __webpack_require__(6);\n\nvar _donutChart2 = _interopRequireDefault(_donutChart);\n\nvar _barChart = __webpack_require__(5);\n\nvar _barChart2 = _interopRequireDefault(_barChart);\n\nvar _lineChart = __webpack_require__(7);\n\nvar _lineChart2 = _interopRequireDefault(_lineChart);\n\nvar _areaChart = __webpack_require__(4);\n\nvar _areaChart2 = _interopRequireDefault(_areaChart);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar VueMorris = {\n  DonutChart: _donutChart2.default, BarChart: _barChart2.default, LineChart: _lineChart2.default, AreaChart: _areaChart2.default\n};\n\nmodule.exports = VueMorris;\n\n/***/ }\n/******/ ])});;\n\n\n// WEBPACK FOOTER //\n// vue-morris.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e55b4164b127bd204026","/*\r\nTODO:\r\n  lineWidth: { type: [ Number, String ], required: false },\r\n  pointSize: { type: [ Number, String ], required: false },\r\n  pointFillColors: { type: [ String, Array ], required: false}, // Colors for the series points. By default uses the same values as lineColors\r\n  pointStrokeColors: {}, // Colors for the outlines of the series points. (#ffffff by default).\r\n  ymax: {}, // Max. bound for Y-values. Alternatively, set this to 'auto' to compute automatically, or 'auto [num]' to automatically compute and ensure that the max y-value is at least [num].\r\n  ymin: {}, // Min. bound for Y-values. Alternatively, set this to 'auto' to compute automatically, or 'auto [num]' to automatically compute and ensure that the min y-value is at most [num]. \r\n  smooth: { type: [ Boolean, String ], required: false, default: true }, // Set to false to disable line smoothing.\r\n  parseTime: {}, // Set to false to skip time/date parsing for X values, instead treating them as an equally-spaced series.\r\n  postUnits: {}, // Set to a string value (eg: '%') to add a label suffix all y-labels.\r\n  preUnits: {}, // Set to a string value (eg: '$') to add a label prefix all y-labels.\r\n  dateFormat: {}, // A function that accepts millisecond timestamps and formats them for display as chart labels. \r\n  \r\n  xLabelFormat: {}, //  A function that accepts Date objects and formats them for display as x-axis labels. Overrides the default formatter chosen by the automatic labeller or the xLabels option. \r\n  xLabelAngle: {}, // The angle in degrees from horizontal to draw x-axis labels.\r\n  yLabelFormat: {}, //  A function that accepts y-values and formats them for display as y-axis labels. \r\n  goals: {}, // A list of y-values to draw as horizontal 'goal' lines on the chart. \r\n  goalStrokeWidth: {}, // Width, in pixels, of the goal lines.\r\n  goalLineColors: {}, //  Array of color values to use for the goal line colors. If you list fewer colors here than you have lines in goals, then the values will be cycled.\r\n  events: {}, // A list of x-values to draw as vertical 'event' lines on the chart. \r\n  eventStrokeWidth: {}, //  Width, in pixels, of the event lines.\r\n  eventLineColors: {}, // Array of color values to use for the event line colors. If you list fewer colors here than you have lines in events, then the values will be cycled.\r\n  fillOpacity: {}, //  Change the opacity of the area fill colour. Accepts values between 0.0 (for completely transparent) and 1.0 (for completely opaque).\r\n\r\n  behaveLikeLine: {}, //   Set to true to overlay the areas on top of each other instead of stacking them.\r\n}\r\n*/\r\n\r\nconst Props = {\r\n  id: { type: String, required: true }, \r\n  data: { type: [ String, Array ], required: true },\r\n  barColors: { type: [ String, Array ], required: false },\r\n  xkey: { type: String, required: false, default: 'key' },\r\n  ykeys: { type: [ String, Array ], required: false, default: [ 'value' ] },\r\n  labels: { type: [ String, Array ], required: false, default: [ 'Value' ] },\r\n  hoverCallback: { type: Function, required: false },\r\n  axes: { type: [ Boolean, String ], required: false, default: true },\r\n  hideHover: { type: String, required: false },\r\n  stacked: { type: [ Boolean, String ], required: false },\r\n  resize: { type: [ Boolean, String ], required: false },\r\n  grid: { type: [ Boolean, String ], required: false, default: true },\r\n  gridTextColor: { type: String, required: false, default: '#888' },\r\n  gridTextSize: { type: [ Number, String ], required: false, default: 12 },\r\n  gridTextFamily: { type: String, required: false, default: 'sans-serif' },\r\n  gridTextWeight: { type: String, required: false, default: 'normal' },\r\n\r\n  colors: { type: [ String, Array ], required: false },\r\n  formatter: { type: Function, required: false },\r\n\r\n  lineColors: { type: [ String, Array ], required: false },\r\n  xLabels: { type: String, required: false },\r\n}\r\n\r\nconst ChartProps = {\r\n\r\n  bar: {\r\n    props: {\r\n      id: Props.id,\r\n      data: Props.data,\r\n      barColors: Props.barColors,\r\n      xkey: Props.xkey,\r\n      ykeys: Props.ykeys,\r\n      labels: Props.labels,\r\n      hoverCallback: Props.hoverCallback,\r\n      grid: Props.grid,\r\n      axes: Props.axes,\r\n      hideHover: Props.hideHover,\r\n      stacked: Props.stacked,\r\n      resize: Props.resize,\r\n      gridTextColor: Props.gridTextColor,\r\n      gridTextSize: Props.gridTextSize,\r\n      gridTextFamily: Props.gridTextFamily,\r\n      gridTextWeight: Props.gridTextWeight\r\n    }\r\n  },\r\n\r\n  donut: {\r\n    props: {\r\n      id: Props.id, \r\n      data: Props.data,\r\n      colors: Props.colors,\r\n      formatter: Props.formatter,\r\n      resize: Props.resize\r\n    }\r\n  },\r\n\r\n  line: {\r\n    props: {\r\n      id: Props.id, \r\n      data: Props.data,\r\n      resize: Props.resize,\r\n      lineColors: Props.lineColors,\r\n      xkey: Props.xkey,\r\n      ykeys: Props.ykeys,\r\n      labels: Props.labels,\r\n      xLabels: Props.xLabels,\r\n      grid: Props.grid,\r\n      gridTextColor: Props.gridTextColor,\r\n      gridTextSize: Props.gridTextSize,\r\n      gridTextFamily: Props.gridTextFamily,\r\n      gridTextWeight: Props.gridTextWeight\r\n    }\r\n  },\r\n\r\n  area: {\r\n    props: {\r\n      id: Props.id, \r\n      data: Props.data,\r\n      resize: Props.resize,\r\n      lineColors: Props.lineColors,\r\n      xkey: Props.xkey,\r\n      ykeys: Props.ykeys,\r\n      labels: Props.labels,\r\n      xLabels: Props.xLabels,\r\n      grid: Props.grid,\r\n      gridTextColor: Props.gridTextColor,\r\n      gridTextSize: Props.gridTextSize,\r\n      gridTextFamily: Props.gridTextFamily,\r\n      gridTextWeight: Props.gridTextWeight\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default ChartProps\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chart-props.js","const Converter = {\r\n  toObject (data) {\r\n    if (typeof data === 'string') {\r\n      return JSON.parse(data)\r\n    }\r\n    return data\r\n  },\r\n\r\n  toBoolean (data) {\r\n    if (typeof data === 'string') {\r\n      return data === 'true'\r\n    }\r\n    return data\r\n  },\r\n\r\n  toInt (data) {\r\n    if (typeof data === 'string') {\r\n      return parseInt(data)\r\n    }\r\n    return data\r\n  },\r\n}\r\n\r\nmodule.exports = Converter\n\n\n// WEBPACK FOOTER //\n// ./src/util/converter.js","/* @license\nmorris.js v0.5.0\nCopyright 2014 Olly Smith All rights reserved.\nLicensed under the BSD-2-Clause License.\n*/\n\n\n(function() {\n  var $, Morris, minutesSpecHelper, secondsSpecHelper,\n    __slice = [].slice,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  Morris = window.Morris = {};\n\n  $ = jQuery;\n\n  Morris.EventEmitter = (function() {\n    function EventEmitter() {}\n\n    EventEmitter.prototype.on = function(name, handler) {\n      if (this.handlers == null) {\n        this.handlers = {};\n      }\n      if (this.handlers[name] == null) {\n        this.handlers[name] = [];\n      }\n      this.handlers[name].push(handler);\n      return this;\n    };\n\n    EventEmitter.prototype.fire = function() {\n      var args, handler, name, _i, _len, _ref, _results;\n      name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if ((this.handlers != null) && (this.handlers[name] != null)) {\n        _ref = this.handlers[name];\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          handler = _ref[_i];\n          _results.push(handler.apply(null, args));\n        }\n        return _results;\n      }\n    };\n\n    return EventEmitter;\n\n  })();\n\n  Morris.commas = function(num) {\n    var absnum, intnum, ret, strabsnum;\n    if (num != null) {\n      ret = num < 0 ? \"-\" : \"\";\n      absnum = Math.abs(num);\n      intnum = Math.floor(absnum).toFixed(0);\n      ret += intnum.replace(/(?=(?:\\d{3})+$)(?!^)/g, ',');\n      strabsnum = absnum.toString();\n      if (strabsnum.length > intnum.length) {\n        ret += strabsnum.slice(intnum.length);\n      }\n      return ret;\n    } else {\n      return '-';\n    }\n  };\n\n  Morris.pad2 = function(number) {\n    return (number < 10 ? '0' : '') + number;\n  };\n\n  Morris.Grid = (function(_super) {\n    __extends(Grid, _super);\n\n    function Grid(options) {\n      this.resizeHandler = __bind(this.resizeHandler, this);\n      var _this = this;\n      if (typeof options.element === 'string') {\n        this.el = $(document.getElementById(options.element));\n      } else {\n        this.el = $(options.element);\n      }\n      if ((this.el == null) || this.el.length === 0) {\n        throw new Error(\"Graph container element not found\");\n      }\n      if (this.el.css('position') === 'static') {\n        this.el.css('position', 'relative');\n      }\n      this.options = $.extend({}, this.gridDefaults, this.defaults || {}, options);\n      if (typeof this.options.units === 'string') {\n        this.options.postUnits = options.units;\n      }\n      this.raphael = new Raphael(this.el[0]);\n      this.elementWidth = null;\n      this.elementHeight = null;\n      this.dirty = false;\n      this.selectFrom = null;\n      if (this.init) {\n        this.init();\n      }\n      this.setData(this.options.data);\n      this.el.bind('mousemove', function(evt) {\n        var left, offset, right, width, x;\n        offset = _this.el.offset();\n        x = evt.pageX - offset.left;\n        if (_this.selectFrom) {\n          left = _this.data[_this.hitTest(Math.min(x, _this.selectFrom))]._x;\n          right = _this.data[_this.hitTest(Math.max(x, _this.selectFrom))]._x;\n          width = right - left;\n          return _this.selectionRect.attr({\n            x: left,\n            width: width\n          });\n        } else {\n          return _this.fire('hovermove', x, evt.pageY - offset.top);\n        }\n      });\n      this.el.bind('mouseleave', function(evt) {\n        if (_this.selectFrom) {\n          _this.selectionRect.hide();\n          _this.selectFrom = null;\n        }\n        return _this.fire('hoverout');\n      });\n      this.el.bind('touchstart touchmove touchend', function(evt) {\n        var offset, touch;\n        touch = evt.originalEvent.touches[0] || evt.originalEvent.changedTouches[0];\n        offset = _this.el.offset();\n        return _this.fire('hovermove', touch.pageX - offset.left, touch.pageY - offset.top);\n      });\n      this.el.bind('click', function(evt) {\n        var offset;\n        offset = _this.el.offset();\n        return _this.fire('gridclick', evt.pageX - offset.left, evt.pageY - offset.top);\n      });\n      if (this.options.rangeSelect) {\n        this.selectionRect = this.raphael.rect(0, 0, 0, this.el.innerHeight()).attr({\n          fill: this.options.rangeSelectColor,\n          stroke: false\n        }).toBack().hide();\n        this.el.bind('mousedown', function(evt) {\n          var offset;\n          offset = _this.el.offset();\n          return _this.startRange(evt.pageX - offset.left);\n        });\n        this.el.bind('mouseup', function(evt) {\n          var offset;\n          offset = _this.el.offset();\n          _this.endRange(evt.pageX - offset.left);\n          return _this.fire('hovermove', evt.pageX - offset.left, evt.pageY - offset.top);\n        });\n      }\n      if (this.options.resize) {\n        $(window).bind('resize', function(evt) {\n          if (_this.timeoutId != null) {\n            window.clearTimeout(_this.timeoutId);\n          }\n          return _this.timeoutId = window.setTimeout(_this.resizeHandler, 100);\n        });\n      }\n      this.el.css('-webkit-tap-highlight-color', 'rgba(0,0,0,0)');\n      if (this.postInit) {\n        this.postInit();\n      }\n    }\n\n    Grid.prototype.gridDefaults = {\n      dateFormat: null,\n      axes: true,\n      grid: true,\n      gridLineColor: '#aaa',\n      gridStrokeWidth: 0.5,\n      gridTextColor: '#888',\n      gridTextSize: 12,\n      gridTextFamily: 'sans-serif',\n      gridTextWeight: 'normal',\n      hideHover: false,\n      yLabelFormat: null,\n      xLabelAngle: 0,\n      numLines: 5,\n      padding: 25,\n      parseTime: true,\n      postUnits: '',\n      preUnits: '',\n      ymax: 'auto',\n      ymin: 'auto 0',\n      goals: [],\n      goalStrokeWidth: 1.0,\n      goalLineColors: ['#666633', '#999966', '#cc6666', '#663333'],\n      events: [],\n      eventStrokeWidth: 1.0,\n      eventLineColors: ['#005a04', '#ccffbb', '#3a5f0b', '#005502'],\n      rangeSelect: null,\n      rangeSelectColor: '#eef',\n      resize: false\n    };\n\n    Grid.prototype.setData = function(data, redraw) {\n      var e, idx, index, maxGoal, minGoal, ret, row, step, total, y, ykey, ymax, ymin, yval, _ref;\n      if (redraw == null) {\n        redraw = true;\n      }\n      this.options.data = data;\n      if ((data == null) || data.length === 0) {\n        this.data = [];\n        this.raphael.clear();\n        if (this.hover != null) {\n          this.hover.hide();\n        }\n        return;\n      }\n      ymax = this.cumulative ? 0 : null;\n      ymin = this.cumulative ? 0 : null;\n      if (this.options.goals.length > 0) {\n        minGoal = Math.min.apply(Math, this.options.goals);\n        maxGoal = Math.max.apply(Math, this.options.goals);\n        ymin = ymin != null ? Math.min(ymin, minGoal) : minGoal;\n        ymax = ymax != null ? Math.max(ymax, maxGoal) : maxGoal;\n      }\n      this.data = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (index = _i = 0, _len = data.length; _i < _len; index = ++_i) {\n          row = data[index];\n          ret = {\n            src: row\n          };\n          ret.label = row[this.options.xkey];\n          if (this.options.parseTime) {\n            ret.x = Morris.parseDate(ret.label);\n            if (this.options.dateFormat) {\n              ret.label = this.options.dateFormat(ret.x);\n            } else if (typeof ret.label === 'number') {\n              ret.label = new Date(ret.label).toString();\n            }\n          } else {\n            ret.x = index;\n            if (this.options.xLabelFormat) {\n              ret.label = this.options.xLabelFormat(ret);\n            }\n          }\n          total = 0;\n          ret.y = (function() {\n            var _j, _len1, _ref, _results1;\n            _ref = this.options.ykeys;\n            _results1 = [];\n            for (idx = _j = 0, _len1 = _ref.length; _j < _len1; idx = ++_j) {\n              ykey = _ref[idx];\n              yval = row[ykey];\n              if (typeof yval === 'string') {\n                yval = parseFloat(yval);\n              }\n              if ((yval != null) && typeof yval !== 'number') {\n                yval = null;\n              }\n              if (yval != null) {\n                if (this.cumulative) {\n                  total += yval;\n                } else {\n                  if (ymax != null) {\n                    ymax = Math.max(yval, ymax);\n                    ymin = Math.min(yval, ymin);\n                  } else {\n                    ymax = ymin = yval;\n                  }\n                }\n              }\n              if (this.cumulative && (total != null)) {\n                ymax = Math.max(total, ymax);\n                ymin = Math.min(total, ymin);\n              }\n              _results1.push(yval);\n            }\n            return _results1;\n          }).call(this);\n          _results.push(ret);\n        }\n        return _results;\n      }).call(this);\n      if (this.options.parseTime) {\n        this.data = this.data.sort(function(a, b) {\n          return (a.x > b.x) - (b.x > a.x);\n        });\n      }\n      this.xmin = this.data[0].x;\n      this.xmax = this.data[this.data.length - 1].x;\n      this.events = [];\n      if (this.options.events.length > 0) {\n        if (this.options.parseTime) {\n          this.events = (function() {\n            var _i, _len, _ref, _results;\n            _ref = this.options.events;\n            _results = [];\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n              e = _ref[_i];\n              _results.push(Morris.parseDate(e));\n            }\n            return _results;\n          }).call(this);\n        } else {\n          this.events = this.options.events;\n        }\n        this.xmax = Math.max(this.xmax, Math.max.apply(Math, this.events));\n        this.xmin = Math.min(this.xmin, Math.min.apply(Math, this.events));\n      }\n      if (this.xmin === this.xmax) {\n        this.xmin -= 1;\n        this.xmax += 1;\n      }\n      this.ymin = this.yboundary('min', ymin);\n      this.ymax = this.yboundary('max', ymax);\n      if (this.ymin === this.ymax) {\n        if (ymin) {\n          this.ymin -= 1;\n        }\n        this.ymax += 1;\n      }\n      if (((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'y') || this.options.grid === true) {\n        if (this.options.ymax === this.gridDefaults.ymax && this.options.ymin === this.gridDefaults.ymin) {\n          this.grid = this.autoGridLines(this.ymin, this.ymax, this.options.numLines);\n          this.ymin = Math.min(this.ymin, this.grid[0]);\n          this.ymax = Math.max(this.ymax, this.grid[this.grid.length - 1]);\n        } else {\n          step = (this.ymax - this.ymin) / (this.options.numLines - 1);\n          this.grid = (function() {\n            var _i, _ref1, _ref2, _results;\n            _results = [];\n            for (y = _i = _ref1 = this.ymin, _ref2 = this.ymax; step > 0 ? _i <= _ref2 : _i >= _ref2; y = _i += step) {\n              _results.push(y);\n            }\n            return _results;\n          }).call(this);\n        }\n      }\n      this.dirty = true;\n      if (redraw) {\n        return this.redraw();\n      }\n    };\n\n    Grid.prototype.yboundary = function(boundaryType, currentValue) {\n      var boundaryOption, suggestedValue;\n      boundaryOption = this.options[\"y\" + boundaryType];\n      if (typeof boundaryOption === 'string') {\n        if (boundaryOption.slice(0, 4) === 'auto') {\n          if (boundaryOption.length > 5) {\n            suggestedValue = parseInt(boundaryOption.slice(5), 10);\n            if (currentValue == null) {\n              return suggestedValue;\n            }\n            return Math[boundaryType](currentValue, suggestedValue);\n          } else {\n            if (currentValue != null) {\n              return currentValue;\n            } else {\n              return 0;\n            }\n          }\n        } else {\n          return parseInt(boundaryOption, 10);\n        }\n      } else {\n        return boundaryOption;\n      }\n    };\n\n    Grid.prototype.autoGridLines = function(ymin, ymax, nlines) {\n      var gmax, gmin, grid, smag, span, step, unit, y, ymag;\n      span = ymax - ymin;\n      ymag = Math.floor(Math.log(span) / Math.log(10));\n      unit = Math.pow(10, ymag);\n      gmin = Math.floor(ymin / unit) * unit;\n      gmax = Math.ceil(ymax / unit) * unit;\n      step = (gmax - gmin) / (nlines - 1);\n      if (unit === 1 && step > 1 && Math.ceil(step) !== step) {\n        step = Math.ceil(step);\n        gmax = gmin + step * (nlines - 1);\n      }\n      if (gmin < 0 && gmax > 0) {\n        gmin = Math.floor(ymin / step) * step;\n        gmax = Math.ceil(ymax / step) * step;\n      }\n      if (step < 1) {\n        smag = Math.floor(Math.log(step) / Math.log(10));\n        grid = (function() {\n          var _i, _results;\n          _results = [];\n          for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\n            _results.push(parseFloat(y.toFixed(1 - smag)));\n          }\n          return _results;\n        })();\n      } else {\n        grid = (function() {\n          var _i, _results;\n          _results = [];\n          for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\n            _results.push(y);\n          }\n          return _results;\n        })();\n      }\n      return grid;\n    };\n\n    Grid.prototype._calc = function() {\n      var bottomOffsets, gridLine, h, i, w, yLabelWidths, _ref, _ref1;\n      w = this.el.width();\n      h = this.el.height();\n      if (this.elementWidth !== w || this.elementHeight !== h || this.dirty) {\n        this.elementWidth = w;\n        this.elementHeight = h;\n        this.dirty = false;\n        this.left = this.options.padding;\n        this.right = this.elementWidth - this.options.padding;\n        this.top = this.options.padding;\n        this.bottom = this.elementHeight - this.options.padding;\n        if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'y') {\n          yLabelWidths = (function() {\n            var _i, _len, _ref1, _results;\n            _ref1 = this.grid;\n            _results = [];\n            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n              gridLine = _ref1[_i];\n              _results.push(this.measureText(this.yAxisFormat(gridLine)).width);\n            }\n            return _results;\n          }).call(this);\n          this.left += Math.max.apply(Math, yLabelWidths);\n        }\n        if ((_ref1 = this.options.axes) === true || _ref1 === 'both' || _ref1 === 'x') {\n          bottomOffsets = (function() {\n            var _i, _ref2, _results;\n            _results = [];\n            for (i = _i = 0, _ref2 = this.data.length; 0 <= _ref2 ? _i < _ref2 : _i > _ref2; i = 0 <= _ref2 ? ++_i : --_i) {\n              _results.push(this.measureText(this.data[i].text, -this.options.xLabelAngle).height);\n            }\n            return _results;\n          }).call(this);\n          this.bottom -= Math.max.apply(Math, bottomOffsets);\n        }\n        this.width = Math.max(1, this.right - this.left);\n        this.height = Math.max(1, this.bottom - this.top);\n        this.dx = this.width / (this.xmax - this.xmin);\n        this.dy = this.height / (this.ymax - this.ymin);\n        if (this.calc) {\n          return this.calc();\n        }\n      }\n    };\n\n    Grid.prototype.transY = function(y) {\n      return this.bottom - (y - this.ymin) * this.dy;\n    };\n\n    Grid.prototype.transX = function(x) {\n      if (this.data.length === 1) {\n        return (this.left + this.right) / 2;\n      } else {\n        return this.left + (x - this.xmin) * this.dx;\n      }\n    };\n\n    Grid.prototype.redraw = function() {\n      this.raphael.clear();\n      this._calc();\n      this.drawGrid();\n      this.drawGoals();\n      this.drawEvents();\n      if (this.draw) {\n        return this.draw();\n      }\n    };\n\n    Grid.prototype.measureText = function(text, angle) {\n      var ret, tt;\n      if (angle == null) {\n        angle = 0;\n      }\n      tt = this.raphael.text(100, 100, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).rotate(angle);\n      ret = tt.getBBox();\n      tt.remove();\n      return ret;\n    };\n\n    Grid.prototype.yAxisFormat = function(label) {\n      return this.yLabelFormat(label);\n    };\n\n    Grid.prototype.yLabelFormat = function(label) {\n      if (typeof this.options.yLabelFormat === 'function') {\n        return this.options.yLabelFormat(label);\n      } else {\n        return \"\" + this.options.preUnits + (Morris.commas(label)) + this.options.postUnits;\n      }\n    };\n\n    Grid.prototype.drawGrid = function() {\n      var lineY, y, _i, _len, _ref, _ref1, _ref2, _results;\n      if (this.options.grid === false && ((_ref = this.options.axes) !== true && _ref !== 'both' && _ref !== 'y')) {\n        return;\n      }\n      _ref1 = this.grid;\n      _results = [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        lineY = _ref1[_i];\n        y = this.transY(lineY);\n        if ((_ref2 = this.options.axes) === true || _ref2 === 'both' || _ref2 === 'y') {\n          this.drawYAxisLabel(this.left - this.options.padding / 2, y, this.yAxisFormat(lineY));\n        }\n        if (this.options.grid) {\n          _results.push(this.drawGridLine(\"M\" + this.left + \",\" + y + \"H\" + (this.left + this.width)));\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawGoals = function() {\n      var color, goal, i, _i, _len, _ref, _results;\n      _ref = this.options.goals;\n      _results = [];\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        goal = _ref[i];\n        color = this.options.goalLineColors[i % this.options.goalLineColors.length];\n        _results.push(this.drawGoal(goal, color));\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawEvents = function() {\n      var color, event, i, _i, _len, _ref, _results;\n      _ref = this.events;\n      _results = [];\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        event = _ref[i];\n        color = this.options.eventLineColors[i % this.options.eventLineColors.length];\n        _results.push(this.drawEvent(event, color));\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawGoal = function(goal, color) {\n      return this.raphael.path(\"M\" + this.left + \",\" + (this.transY(goal)) + \"H\" + this.right).attr('stroke', color).attr('stroke-width', this.options.goalStrokeWidth);\n    };\n\n    Grid.prototype.drawEvent = function(event, color) {\n      return this.raphael.path(\"M\" + (this.transX(event)) + \",\" + this.bottom + \"V\" + this.top).attr('stroke', color).attr('stroke-width', this.options.eventStrokeWidth);\n    };\n\n    Grid.prototype.drawYAxisLabel = function(xPos, yPos, text) {\n      return this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor).attr('text-anchor', 'end');\n    };\n\n    Grid.prototype.drawGridLine = function(path) {\n      return this.raphael.path(path).attr('stroke', this.options.gridLineColor).attr('stroke-width', this.options.gridStrokeWidth);\n    };\n\n    Grid.prototype.startRange = function(x) {\n      this.hover.hide();\n      this.selectFrom = x;\n      return this.selectionRect.attr({\n        x: x,\n        width: 0\n      }).show();\n    };\n\n    Grid.prototype.endRange = function(x) {\n      var end, start;\n      if (this.selectFrom) {\n        start = Math.min(this.selectFrom, x);\n        end = Math.max(this.selectFrom, x);\n        this.options.rangeSelect.call(this.el, {\n          start: this.data[this.hitTest(start)].x,\n          end: this.data[this.hitTest(end)].x\n        });\n        return this.selectFrom = null;\n      }\n    };\n\n    Grid.prototype.resizeHandler = function() {\n      this.timeoutId = null;\n      this.raphael.setSize(this.el.width(), this.el.height());\n      return this.redraw();\n    };\n\n    return Grid;\n\n  })(Morris.EventEmitter);\n\n  Morris.parseDate = function(date) {\n    var isecs, m, msecs, n, o, offsetmins, p, q, r, ret, secs;\n    if (typeof date === 'number') {\n      return date;\n    }\n    m = date.match(/^(\\d+) Q(\\d)$/);\n    n = date.match(/^(\\d+)-(\\d+)$/);\n    o = date.match(/^(\\d+)-(\\d+)-(\\d+)$/);\n    p = date.match(/^(\\d+) W(\\d+)$/);\n    q = date.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+)(Z|([+-])(\\d\\d):?(\\d\\d))?$/);\n    r = date.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+):(\\d+(\\.\\d+)?)(Z|([+-])(\\d\\d):?(\\d\\d))?$/);\n    if (m) {\n      return new Date(parseInt(m[1], 10), parseInt(m[2], 10) * 3 - 1, 1).getTime();\n    } else if (n) {\n      return new Date(parseInt(n[1], 10), parseInt(n[2], 10) - 1, 1).getTime();\n    } else if (o) {\n      return new Date(parseInt(o[1], 10), parseInt(o[2], 10) - 1, parseInt(o[3], 10)).getTime();\n    } else if (p) {\n      ret = new Date(parseInt(p[1], 10), 0, 1);\n      if (ret.getDay() !== 4) {\n        ret.setMonth(0, 1 + ((4 - ret.getDay()) + 7) % 7);\n      }\n      return ret.getTime() + parseInt(p[2], 10) * 604800000;\n    } else if (q) {\n      if (!q[6]) {\n        return new Date(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10)).getTime();\n      } else {\n        offsetmins = 0;\n        if (q[6] !== 'Z') {\n          offsetmins = parseInt(q[8], 10) * 60 + parseInt(q[9], 10);\n          if (q[7] === '+') {\n            offsetmins = 0 - offsetmins;\n          }\n        }\n        return Date.UTC(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10) + offsetmins);\n      }\n    } else if (r) {\n      secs = parseFloat(r[6]);\n      isecs = Math.floor(secs);\n      msecs = Math.round((secs - isecs) * 1000);\n      if (!r[8]) {\n        return new Date(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10), isecs, msecs).getTime();\n      } else {\n        offsetmins = 0;\n        if (r[8] !== 'Z') {\n          offsetmins = parseInt(r[10], 10) * 60 + parseInt(r[11], 10);\n          if (r[9] === '+') {\n            offsetmins = 0 - offsetmins;\n          }\n        }\n        return Date.UTC(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10) + offsetmins, isecs, msecs);\n      }\n    } else {\n      return new Date(parseInt(date, 10), 0, 1).getTime();\n    }\n  };\n\n  Morris.Hover = (function() {\n    Hover.defaults = {\n      \"class\": 'morris-hover morris-default-style'\n    };\n\n    function Hover(options) {\n      if (options == null) {\n        options = {};\n      }\n      this.options = $.extend({}, Morris.Hover.defaults, options);\n      this.el = $(\"<div class='\" + this.options[\"class\"] + \"'></div>\");\n      this.el.hide();\n      this.options.parent.append(this.el);\n    }\n\n    Hover.prototype.update = function(html, x, y) {\n      if (!html) {\n        return this.hide();\n      } else {\n        this.html(html);\n        this.show();\n        return this.moveTo(x, y);\n      }\n    };\n\n    Hover.prototype.html = function(content) {\n      return this.el.html(content);\n    };\n\n    Hover.prototype.moveTo = function(x, y) {\n      var hoverHeight, hoverWidth, left, parentHeight, parentWidth, top;\n      parentWidth = this.options.parent.innerWidth();\n      parentHeight = this.options.parent.innerHeight();\n      hoverWidth = this.el.outerWidth();\n      hoverHeight = this.el.outerHeight();\n      left = Math.min(Math.max(0, x - hoverWidth / 2), parentWidth - hoverWidth);\n      if (y != null) {\n        top = y - hoverHeight - 10;\n        if (top < 0) {\n          top = y + 10;\n          if (top + hoverHeight > parentHeight) {\n            top = parentHeight / 2 - hoverHeight / 2;\n          }\n        }\n      } else {\n        top = parentHeight / 2 - hoverHeight / 2;\n      }\n      return this.el.css({\n        left: left + \"px\",\n        top: parseInt(top) + \"px\"\n      });\n    };\n\n    Hover.prototype.show = function() {\n      return this.el.show();\n    };\n\n    Hover.prototype.hide = function() {\n      return this.el.hide();\n    };\n\n    return Hover;\n\n  })();\n\n  Morris.Line = (function(_super) {\n    __extends(Line, _super);\n\n    function Line(options) {\n      this.hilight = __bind(this.hilight, this);\n      this.onHoverOut = __bind(this.onHoverOut, this);\n      this.onHoverMove = __bind(this.onHoverMove, this);\n      this.onGridClick = __bind(this.onGridClick, this);\n      if (!(this instanceof Morris.Line)) {\n        return new Morris.Line(options);\n      }\n      Line.__super__.constructor.call(this, options);\n    }\n\n    Line.prototype.init = function() {\n      if (this.options.hideHover !== 'always') {\n        this.hover = new Morris.Hover({\n          parent: this.el\n        });\n        this.on('hovermove', this.onHoverMove);\n        this.on('hoverout', this.onHoverOut);\n        return this.on('gridclick', this.onGridClick);\n      }\n    };\n\n    Line.prototype.defaults = {\n      lineWidth: 3,\n      pointSize: 4,\n      lineColors: ['#0b62a4', '#7A92A3', '#4da74d', '#afd8f8', '#edc240', '#cb4b4b', '#9440ed'],\n      pointStrokeWidths: [1],\n      pointStrokeColors: ['#ffffff'],\n      pointFillColors: [],\n      smooth: true,\n      xLabels: 'auto',\n      xLabelFormat: null,\n      xLabelMargin: 24,\n      hideHover: false\n    };\n\n    Line.prototype.calc = function() {\n      this.calcPoints();\n      return this.generatePaths();\n    };\n\n    Line.prototype.calcPoints = function() {\n      var row, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        row._x = this.transX(row.x);\n        row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(this.transY(y));\n            } else {\n              _results1.push(y);\n            }\n          }\n          return _results1;\n        }).call(this);\n        _results.push(row._ymax = Math.min.apply(Math, [this.bottom].concat((function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row._y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(y);\n            }\n          }\n          return _results1;\n        })())));\n      }\n      return _results;\n    };\n\n    Line.prototype.hitTest = function(x) {\n      var index, r, _i, _len, _ref;\n      if (this.data.length === 0) {\n        return null;\n      }\n      _ref = this.data.slice(1);\n      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {\n        r = _ref[index];\n        if (x < (r._x + this.data[index]._x) / 2) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    Line.prototype.onGridClick = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.fire('click', index, this.data[index].src, x, y);\n    };\n\n    Line.prototype.onHoverMove = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.displayHoverForRow(index);\n    };\n\n    Line.prototype.onHoverOut = function() {\n      if (this.options.hideHover !== false) {\n        return this.displayHoverForRow(null);\n      }\n    };\n\n    Line.prototype.displayHoverForRow = function(index) {\n      var _ref;\n      if (index != null) {\n        (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\n        return this.hilight(index);\n      } else {\n        this.hover.hide();\n        return this.hilight();\n      }\n    };\n\n    Line.prototype.hoverContentForRow = function(index) {\n      var content, j, row, y, _i, _len, _ref;\n      row = this.data[index];\n      content = \"<div class='morris-hover-row-label'>\" + row.label + \"</div>\";\n      _ref = row.y;\n      for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {\n        y = _ref[j];\n        content += \"<div class='morris-hover-point' style='color: \" + (this.colorFor(row, j, 'label')) + \"'>\\n  \" + this.options.labels[j] + \":\\n  \" + (this.yLabelFormat(y)) + \"\\n</div>\";\n      }\n      if (typeof this.options.hoverCallback === 'function') {\n        content = this.options.hoverCallback(index, this.options, content, row.src);\n      }\n      return [content, row._x, row._ymax];\n    };\n\n    Line.prototype.generatePaths = function() {\n      var coords, i, r, smooth;\n      return this.paths = (function() {\n        var _i, _ref, _ref1, _results;\n        _results = [];\n        for (i = _i = 0, _ref = this.options.ykeys.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n          smooth = typeof this.options.smooth === \"boolean\" ? this.options.smooth : (_ref1 = this.options.ykeys[i], __indexOf.call(this.options.smooth, _ref1) >= 0);\n          coords = (function() {\n            var _j, _len, _ref2, _results1;\n            _ref2 = this.data;\n            _results1 = [];\n            for (_j = 0, _len = _ref2.length; _j < _len; _j++) {\n              r = _ref2[_j];\n              if (r._y[i] !== void 0) {\n                _results1.push({\n                  x: r._x,\n                  y: r._y[i]\n                });\n              }\n            }\n            return _results1;\n          }).call(this);\n          if (coords.length > 1) {\n            _results.push(Morris.Line.createPath(coords, smooth, this.bottom));\n          } else {\n            _results.push(null);\n          }\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Line.prototype.draw = function() {\n      var _ref;\n      if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\n        this.drawXAxis();\n      }\n      this.drawSeries();\n      if (this.options.hideHover === false) {\n        return this.displayHoverForRow(this.data.length - 1);\n      }\n    };\n\n    Line.prototype.drawXAxis = function() {\n      var drawLabel, l, labels, prevAngleMargin, prevLabelMargin, row, ypos, _i, _len, _results,\n        _this = this;\n      ypos = this.bottom + this.options.padding / 2;\n      prevLabelMargin = null;\n      prevAngleMargin = null;\n      drawLabel = function(labelText, xpos) {\n        var label, labelBox, margin, offset, textBox;\n        label = _this.drawXAxisLabel(_this.transX(xpos), ypos, labelText);\n        textBox = label.getBBox();\n        label.transform(\"r\" + (-_this.options.xLabelAngle));\n        labelBox = label.getBBox();\n        label.transform(\"t0,\" + (labelBox.height / 2) + \"...\");\n        if (_this.options.xLabelAngle !== 0) {\n          offset = -0.5 * textBox.width * Math.cos(_this.options.xLabelAngle * Math.PI / 180.0);\n          label.transform(\"t\" + offset + \",0...\");\n        }\n        labelBox = label.getBBox();\n        if (((prevLabelMargin == null) || prevLabelMargin >= labelBox.x + labelBox.width || (prevAngleMargin != null) && prevAngleMargin >= labelBox.x) && labelBox.x >= 0 && (labelBox.x + labelBox.width) < _this.el.width()) {\n          if (_this.options.xLabelAngle !== 0) {\n            margin = 1.25 * _this.options.gridTextSize / Math.sin(_this.options.xLabelAngle * Math.PI / 180.0);\n            prevAngleMargin = labelBox.x - margin;\n          }\n          return prevLabelMargin = labelBox.x - _this.options.xLabelMargin;\n        } else {\n          return label.remove();\n        }\n      };\n      if (this.options.parseTime) {\n        if (this.data.length === 1 && this.options.xLabels === 'auto') {\n          labels = [[this.data[0].label, this.data[0].x]];\n        } else {\n          labels = Morris.labelSeries(this.xmin, this.xmax, this.width, this.options.xLabels, this.options.xLabelFormat);\n        }\n      } else {\n        labels = (function() {\n          var _i, _len, _ref, _results;\n          _ref = this.data;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            row = _ref[_i];\n            _results.push([row.label, row.x]);\n          }\n          return _results;\n        }).call(this);\n      }\n      labels.reverse();\n      _results = [];\n      for (_i = 0, _len = labels.length; _i < _len; _i++) {\n        l = labels[_i];\n        _results.push(drawLabel(l[0], l[1]));\n      }\n      return _results;\n    };\n\n    Line.prototype.drawSeries = function() {\n      var i, _i, _j, _ref, _ref1, _results;\n      this.seriesPoints = [];\n      for (i = _i = _ref = this.options.ykeys.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {\n        this._drawLineFor(i);\n      }\n      _results = [];\n      for (i = _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; i = _ref1 <= 0 ? ++_j : --_j) {\n        _results.push(this._drawPointFor(i));\n      }\n      return _results;\n    };\n\n    Line.prototype._drawPointFor = function(index) {\n      var circle, row, _i, _len, _ref, _results;\n      this.seriesPoints[index] = [];\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        circle = null;\n        if (row._y[index] != null) {\n          circle = this.drawLinePoint(row._x, row._y[index], this.colorFor(row, index, 'point'), index);\n        }\n        _results.push(this.seriesPoints[index].push(circle));\n      }\n      return _results;\n    };\n\n    Line.prototype._drawLineFor = function(index) {\n      var path;\n      path = this.paths[index];\n      if (path !== null) {\n        return this.drawLinePath(path, this.colorFor(null, index, 'line'), index);\n      }\n    };\n\n    Line.createPath = function(coords, smooth, bottom) {\n      var coord, g, grads, i, ix, lg, path, prevCoord, x1, x2, y1, y2, _i, _len;\n      path = \"\";\n      if (smooth) {\n        grads = Morris.Line.gradients(coords);\n      }\n      prevCoord = {\n        y: null\n      };\n      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\n        coord = coords[i];\n        if (coord.y != null) {\n          if (prevCoord.y != null) {\n            if (smooth) {\n              g = grads[i];\n              lg = grads[i - 1];\n              ix = (coord.x - prevCoord.x) / 4;\n              x1 = prevCoord.x + ix;\n              y1 = Math.min(bottom, prevCoord.y + ix * lg);\n              x2 = coord.x - ix;\n              y2 = Math.min(bottom, coord.y - ix * g);\n              path += \"C\" + x1 + \",\" + y1 + \",\" + x2 + \",\" + y2 + \",\" + coord.x + \",\" + coord.y;\n            } else {\n              path += \"L\" + coord.x + \",\" + coord.y;\n            }\n          } else {\n            if (!smooth || (grads[i] != null)) {\n              path += \"M\" + coord.x + \",\" + coord.y;\n            }\n          }\n        }\n        prevCoord = coord;\n      }\n      return path;\n    };\n\n    Line.gradients = function(coords) {\n      var coord, grad, i, nextCoord, prevCoord, _i, _len, _results;\n      grad = function(a, b) {\n        return (a.y - b.y) / (a.x - b.x);\n      };\n      _results = [];\n      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\n        coord = coords[i];\n        if (coord.y != null) {\n          nextCoord = coords[i + 1] || {\n            y: null\n          };\n          prevCoord = coords[i - 1] || {\n            y: null\n          };\n          if ((prevCoord.y != null) && (nextCoord.y != null)) {\n            _results.push(grad(prevCoord, nextCoord));\n          } else if (prevCoord.y != null) {\n            _results.push(grad(prevCoord, coord));\n          } else if (nextCoord.y != null) {\n            _results.push(grad(coord, nextCoord));\n          } else {\n            _results.push(null);\n          }\n        } else {\n          _results.push(null);\n        }\n      }\n      return _results;\n    };\n\n    Line.prototype.hilight = function(index) {\n      var i, _i, _j, _ref, _ref1;\n      if (this.prevHilight !== null && this.prevHilight !== index) {\n        for (i = _i = 0, _ref = this.seriesPoints.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n          if (this.seriesPoints[i][this.prevHilight]) {\n            this.seriesPoints[i][this.prevHilight].animate(this.pointShrinkSeries(i));\n          }\n        }\n      }\n      if (index !== null && this.prevHilight !== index) {\n        for (i = _j = 0, _ref1 = this.seriesPoints.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n          if (this.seriesPoints[i][index]) {\n            this.seriesPoints[i][index].animate(this.pointGrowSeries(i));\n          }\n        }\n      }\n      return this.prevHilight = index;\n    };\n\n    Line.prototype.colorFor = function(row, sidx, type) {\n      if (typeof this.options.lineColors === 'function') {\n        return this.options.lineColors.call(this, row, sidx, type);\n      } else if (type === 'point') {\n        return this.options.pointFillColors[sidx % this.options.pointFillColors.length] || this.options.lineColors[sidx % this.options.lineColors.length];\n      } else {\n        return this.options.lineColors[sidx % this.options.lineColors.length];\n      }\n    };\n\n    Line.prototype.drawXAxisLabel = function(xPos, yPos, text) {\n      return this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\n    };\n\n    Line.prototype.drawLinePath = function(path, lineColor, lineIndex) {\n      return this.raphael.path(path).attr('stroke', lineColor).attr('stroke-width', this.lineWidthForSeries(lineIndex));\n    };\n\n    Line.prototype.drawLinePoint = function(xPos, yPos, pointColor, lineIndex) {\n      return this.raphael.circle(xPos, yPos, this.pointSizeForSeries(lineIndex)).attr('fill', pointColor).attr('stroke-width', this.pointStrokeWidthForSeries(lineIndex)).attr('stroke', this.pointStrokeColorForSeries(lineIndex));\n    };\n\n    Line.prototype.pointStrokeWidthForSeries = function(index) {\n      return this.options.pointStrokeWidths[index % this.options.pointStrokeWidths.length];\n    };\n\n    Line.prototype.pointStrokeColorForSeries = function(index) {\n      return this.options.pointStrokeColors[index % this.options.pointStrokeColors.length];\n    };\n\n    Line.prototype.lineWidthForSeries = function(index) {\n      if (this.options.lineWidth instanceof Array) {\n        return this.options.lineWidth[index % this.options.lineWidth.length];\n      } else {\n        return this.options.lineWidth;\n      }\n    };\n\n    Line.prototype.pointSizeForSeries = function(index) {\n      if (this.options.pointSize instanceof Array) {\n        return this.options.pointSize[index % this.options.pointSize.length];\n      } else {\n        return this.options.pointSize;\n      }\n    };\n\n    Line.prototype.pointGrowSeries = function(index) {\n      return Raphael.animation({\n        r: this.pointSizeForSeries(index) + 3\n      }, 25, 'linear');\n    };\n\n    Line.prototype.pointShrinkSeries = function(index) {\n      return Raphael.animation({\n        r: this.pointSizeForSeries(index)\n      }, 25, 'linear');\n    };\n\n    return Line;\n\n  })(Morris.Grid);\n\n  Morris.labelSeries = function(dmin, dmax, pxwidth, specName, xLabelFormat) {\n    var d, d0, ddensity, name, ret, s, spec, t, _i, _len, _ref;\n    ddensity = 200 * (dmax - dmin) / pxwidth;\n    d0 = new Date(dmin);\n    spec = Morris.LABEL_SPECS[specName];\n    if (spec === void 0) {\n      _ref = Morris.AUTO_LABEL_ORDER;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        name = _ref[_i];\n        s = Morris.LABEL_SPECS[name];\n        if (ddensity >= s.span) {\n          spec = s;\n          break;\n        }\n      }\n    }\n    if (spec === void 0) {\n      spec = Morris.LABEL_SPECS[\"second\"];\n    }\n    if (xLabelFormat) {\n      spec = $.extend({}, spec, {\n        fmt: xLabelFormat\n      });\n    }\n    d = spec.start(d0);\n    ret = [];\n    while ((t = d.getTime()) <= dmax) {\n      if (t >= dmin) {\n        ret.push([spec.fmt(d), t]);\n      }\n      spec.incr(d);\n    }\n    return ret;\n  };\n\n  minutesSpecHelper = function(interval) {\n    return {\n      span: interval * 60 * 1000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours());\n      },\n      fmt: function(d) {\n        return \"\" + (Morris.pad2(d.getHours())) + \":\" + (Morris.pad2(d.getMinutes()));\n      },\n      incr: function(d) {\n        return d.setUTCMinutes(d.getUTCMinutes() + interval);\n      }\n    };\n  };\n\n  secondsSpecHelper = function(interval) {\n    return {\n      span: interval * 1000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes());\n      },\n      fmt: function(d) {\n        return \"\" + (Morris.pad2(d.getHours())) + \":\" + (Morris.pad2(d.getMinutes())) + \":\" + (Morris.pad2(d.getSeconds()));\n      },\n      incr: function(d) {\n        return d.setUTCSeconds(d.getUTCSeconds() + interval);\n      }\n    };\n  };\n\n  Morris.LABEL_SPECS = {\n    \"decade\": {\n      span: 172800000000,\n      start: function(d) {\n        return new Date(d.getFullYear() - d.getFullYear() % 10, 0, 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear());\n      },\n      incr: function(d) {\n        return d.setFullYear(d.getFullYear() + 10);\n      }\n    },\n    \"year\": {\n      span: 17280000000,\n      start: function(d) {\n        return new Date(d.getFullYear(), 0, 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear());\n      },\n      incr: function(d) {\n        return d.setFullYear(d.getFullYear() + 1);\n      }\n    },\n    \"month\": {\n      span: 2419200000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1));\n      },\n      incr: function(d) {\n        return d.setMonth(d.getMonth() + 1);\n      }\n    },\n    \"week\": {\n      span: 604800000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1)) + \"-\" + (Morris.pad2(d.getDate()));\n      },\n      incr: function(d) {\n        return d.setDate(d.getDate() + 7);\n      }\n    },\n    \"day\": {\n      span: 86400000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1)) + \"-\" + (Morris.pad2(d.getDate()));\n      },\n      incr: function(d) {\n        return d.setDate(d.getDate() + 1);\n      }\n    },\n    \"hour\": minutesSpecHelper(60),\n    \"30min\": minutesSpecHelper(30),\n    \"15min\": minutesSpecHelper(15),\n    \"10min\": minutesSpecHelper(10),\n    \"5min\": minutesSpecHelper(5),\n    \"minute\": minutesSpecHelper(1),\n    \"30sec\": secondsSpecHelper(30),\n    \"15sec\": secondsSpecHelper(15),\n    \"10sec\": secondsSpecHelper(10),\n    \"5sec\": secondsSpecHelper(5),\n    \"second\": secondsSpecHelper(1)\n  };\n\n  Morris.AUTO_LABEL_ORDER = [\"decade\", \"year\", \"month\", \"week\", \"day\", \"hour\", \"30min\", \"15min\", \"10min\", \"5min\", \"minute\", \"30sec\", \"15sec\", \"10sec\", \"5sec\", \"second\"];\n\n  Morris.Area = (function(_super) {\n    var areaDefaults;\n\n    __extends(Area, _super);\n\n    areaDefaults = {\n      fillOpacity: 'auto',\n      behaveLikeLine: false\n    };\n\n    function Area(options) {\n      var areaOptions;\n      if (!(this instanceof Morris.Area)) {\n        return new Morris.Area(options);\n      }\n      areaOptions = $.extend({}, areaDefaults, options);\n      this.cumulative = !areaOptions.behaveLikeLine;\n      if (areaOptions.fillOpacity === 'auto') {\n        areaOptions.fillOpacity = areaOptions.behaveLikeLine ? .8 : 1;\n      }\n      Area.__super__.constructor.call(this, areaOptions);\n    }\n\n    Area.prototype.calcPoints = function() {\n      var row, total, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        row._x = this.transX(row.x);\n        total = 0;\n        row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (this.options.behaveLikeLine) {\n              _results1.push(this.transY(y));\n            } else {\n              total += y || 0;\n              _results1.push(this.transY(total));\n            }\n          }\n          return _results1;\n        }).call(this);\n        _results.push(row._ymax = Math.max.apply(Math, row._y));\n      }\n      return _results;\n    };\n\n    Area.prototype.drawSeries = function() {\n      var i, range, _i, _j, _k, _len, _ref, _ref1, _results, _results1, _results2;\n      this.seriesPoints = [];\n      if (this.options.behaveLikeLine) {\n        range = (function() {\n          _results = [];\n          for (var _i = 0, _ref = this.options.ykeys.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n          return _results;\n        }).apply(this);\n      } else {\n        range = (function() {\n          _results1 = [];\n          for (var _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; _ref1 <= 0 ? _j++ : _j--){ _results1.push(_j); }\n          return _results1;\n        }).apply(this);\n      }\n      _results2 = [];\n      for (_k = 0, _len = range.length; _k < _len; _k++) {\n        i = range[_k];\n        this._drawFillFor(i);\n        this._drawLineFor(i);\n        _results2.push(this._drawPointFor(i));\n      }\n      return _results2;\n    };\n\n    Area.prototype._drawFillFor = function(index) {\n      var path;\n      path = this.paths[index];\n      if (path !== null) {\n        path = path + (\"L\" + (this.transX(this.xmax)) + \",\" + this.bottom + \"L\" + (this.transX(this.xmin)) + \",\" + this.bottom + \"Z\");\n        return this.drawFilledPath(path, this.fillForSeries(index));\n      }\n    };\n\n    Area.prototype.fillForSeries = function(i) {\n      var color;\n      color = Raphael.rgb2hsl(this.colorFor(this.data[i], i, 'line'));\n      return Raphael.hsl(color.h, this.options.behaveLikeLine ? color.s * 0.9 : color.s * 0.75, Math.min(0.98, this.options.behaveLikeLine ? color.l * 1.2 : color.l * 1.25));\n    };\n\n    Area.prototype.drawFilledPath = function(path, fill) {\n      return this.raphael.path(path).attr('fill', fill).attr('fill-opacity', this.options.fillOpacity).attr('stroke', 'none');\n    };\n\n    return Area;\n\n  })(Morris.Line);\n\n  Morris.Bar = (function(_super) {\n    __extends(Bar, _super);\n\n    function Bar(options) {\n      this.onHoverOut = __bind(this.onHoverOut, this);\n      this.onHoverMove = __bind(this.onHoverMove, this);\n      this.onGridClick = __bind(this.onGridClick, this);\n      if (!(this instanceof Morris.Bar)) {\n        return new Morris.Bar(options);\n      }\n      Bar.__super__.constructor.call(this, $.extend({}, options, {\n        parseTime: false\n      }));\n    }\n\n    Bar.prototype.init = function() {\n      this.cumulative = this.options.stacked;\n      if (this.options.hideHover !== 'always') {\n        this.hover = new Morris.Hover({\n          parent: this.el\n        });\n        this.on('hovermove', this.onHoverMove);\n        this.on('hoverout', this.onHoverOut);\n        return this.on('gridclick', this.onGridClick);\n      }\n    };\n\n    Bar.prototype.defaults = {\n      barSizeRatio: 0.75,\n      barGap: 3,\n      barColors: ['#0b62a4', '#7a92a3', '#4da74d', '#afd8f8', '#edc240', '#cb4b4b', '#9440ed'],\n      barOpacity: 1.0,\n      barRadius: [0, 0, 0, 0],\n      xLabelMargin: 50\n    };\n\n    Bar.prototype.calc = function() {\n      var _ref;\n      this.calcBars();\n      if (this.options.hideHover === false) {\n        return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(this.data.length - 1));\n      }\n    };\n\n    Bar.prototype.calcBars = function() {\n      var idx, row, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {\n        row = _ref[idx];\n        row._x = this.left + this.width * (idx + 0.5) / this.data.length;\n        _results.push(row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(this.transY(y));\n            } else {\n              _results1.push(null);\n            }\n          }\n          return _results1;\n        }).call(this));\n      }\n      return _results;\n    };\n\n    Bar.prototype.draw = function() {\n      var _ref;\n      if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\n        this.drawXAxis();\n      }\n      return this.drawSeries();\n    };\n\n    Bar.prototype.drawXAxis = function() {\n      var i, label, labelBox, margin, offset, prevAngleMargin, prevLabelMargin, row, textBox, ypos, _i, _ref, _results;\n      ypos = this.bottom + (this.options.xAxisLabelTopPadding || this.options.padding / 2);\n      prevLabelMargin = null;\n      prevAngleMargin = null;\n      _results = [];\n      for (i = _i = 0, _ref = this.data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n        row = this.data[this.data.length - 1 - i];\n        label = this.drawXAxisLabel(row._x, ypos, row.label);\n        textBox = label.getBBox();\n        label.transform(\"r\" + (-this.options.xLabelAngle));\n        labelBox = label.getBBox();\n        label.transform(\"t0,\" + (labelBox.height / 2) + \"...\");\n        if (this.options.xLabelAngle !== 0) {\n          offset = -0.5 * textBox.width * Math.cos(this.options.xLabelAngle * Math.PI / 180.0);\n          label.transform(\"t\" + offset + \",0...\");\n        }\n        if (((prevLabelMargin == null) || prevLabelMargin >= labelBox.x + labelBox.width || (prevAngleMargin != null) && prevAngleMargin >= labelBox.x) && labelBox.x >= 0 && (labelBox.x + labelBox.width) < this.el.width()) {\n          if (this.options.xLabelAngle !== 0) {\n            margin = 1.25 * this.options.gridTextSize / Math.sin(this.options.xLabelAngle * Math.PI / 180.0);\n            prevAngleMargin = labelBox.x - margin;\n          }\n          _results.push(prevLabelMargin = labelBox.x - this.options.xLabelMargin);\n        } else {\n          _results.push(label.remove());\n        }\n      }\n      return _results;\n    };\n\n    Bar.prototype.drawSeries = function() {\n      var barWidth, bottom, groupWidth, idx, lastTop, left, leftPadding, numBars, row, sidx, size, spaceLeft, top, ypos, zeroPos;\n      groupWidth = this.width / this.options.data.length;\n      numBars = this.options.stacked ? 1 : this.options.ykeys.length;\n      barWidth = (groupWidth * this.options.barSizeRatio - this.options.barGap * (numBars - 1)) / numBars;\n      if (this.options.barSize) {\n        barWidth = Math.min(barWidth, this.options.barSize);\n      }\n      spaceLeft = groupWidth - barWidth * numBars - this.options.barGap * (numBars - 1);\n      leftPadding = spaceLeft / 2;\n      zeroPos = this.ymin <= 0 && this.ymax >= 0 ? this.transY(0) : null;\n      return this.bars = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.data;\n        _results = [];\n        for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {\n          row = _ref[idx];\n          lastTop = 0;\n          _results.push((function() {\n            var _j, _len1, _ref1, _results1;\n            _ref1 = row._y;\n            _results1 = [];\n            for (sidx = _j = 0, _len1 = _ref1.length; _j < _len1; sidx = ++_j) {\n              ypos = _ref1[sidx];\n              if (ypos !== null) {\n                if (zeroPos) {\n                  top = Math.min(ypos, zeroPos);\n                  bottom = Math.max(ypos, zeroPos);\n                } else {\n                  top = ypos;\n                  bottom = this.bottom;\n                }\n                left = this.left + idx * groupWidth + leftPadding;\n                if (!this.options.stacked) {\n                  left += sidx * (barWidth + this.options.barGap);\n                }\n                size = bottom - top;\n                if (this.options.verticalGridCondition && this.options.verticalGridCondition(row.x)) {\n                  this.drawBar(this.left + idx * groupWidth, this.top, groupWidth, Math.abs(this.top - this.bottom), this.options.verticalGridColor, this.options.verticalGridOpacity, this.options.barRadius);\n                }\n                if (this.options.stacked) {\n                  top -= lastTop;\n                }\n                this.drawBar(left, top, barWidth, size, this.colorFor(row, sidx, 'bar'), this.options.barOpacity, this.options.barRadius);\n                _results1.push(lastTop += size);\n              } else {\n                _results1.push(null);\n              }\n            }\n            return _results1;\n          }).call(this));\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Bar.prototype.colorFor = function(row, sidx, type) {\n      var r, s;\n      if (typeof this.options.barColors === 'function') {\n        r = {\n          x: row.x,\n          y: row.y[sidx],\n          label: row.label\n        };\n        s = {\n          index: sidx,\n          key: this.options.ykeys[sidx],\n          label: this.options.labels[sidx]\n        };\n        return this.options.barColors.call(this, r, s, type);\n      } else {\n        return this.options.barColors[sidx % this.options.barColors.length];\n      }\n    };\n\n    Bar.prototype.hitTest = function(x) {\n      if (this.data.length === 0) {\n        return null;\n      }\n      x = Math.max(Math.min(x, this.right), this.left);\n      return Math.min(this.data.length - 1, Math.floor((x - this.left) / (this.width / this.data.length)));\n    };\n\n    Bar.prototype.onGridClick = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.fire('click', index, this.data[index].src, x, y);\n    };\n\n    Bar.prototype.onHoverMove = function(x, y) {\n      var index, _ref;\n      index = this.hitTest(x);\n      return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\n    };\n\n    Bar.prototype.onHoverOut = function() {\n      if (this.options.hideHover !== false) {\n        return this.hover.hide();\n      }\n    };\n\n    Bar.prototype.hoverContentForRow = function(index) {\n      var content, j, row, x, y, _i, _len, _ref;\n      row = this.data[index];\n      content = \"<div class='morris-hover-row-label'>\" + row.label + \"</div>\";\n      _ref = row.y;\n      for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {\n        y = _ref[j];\n        content += \"<div class='morris-hover-point' style='color: \" + (this.colorFor(row, j, 'label')) + \"'>\\n  \" + this.options.labels[j] + \":\\n  \" + (this.yLabelFormat(y)) + \"\\n</div>\";\n      }\n      if (typeof this.options.hoverCallback === 'function') {\n        content = this.options.hoverCallback(index, this.options, content, row.src);\n      }\n      x = this.left + (index + 0.5) * this.width / this.data.length;\n      return [content, x];\n    };\n\n    Bar.prototype.drawXAxisLabel = function(xPos, yPos, text) {\n      var label;\n      return label = this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\n    };\n\n    Bar.prototype.drawBar = function(xPos, yPos, width, height, barColor, opacity, radiusArray) {\n      var maxRadius, path;\n      maxRadius = Math.max.apply(Math, radiusArray);\n      if (maxRadius === 0 || maxRadius > height) {\n        path = this.raphael.rect(xPos, yPos, width, height);\n      } else {\n        path = this.raphael.path(this.roundedRect(xPos, yPos, width, height, radiusArray));\n      }\n      return path.attr('fill', barColor).attr('fill-opacity', opacity).attr('stroke', 'none');\n    };\n\n    Bar.prototype.roundedRect = function(x, y, w, h, r) {\n      if (r == null) {\n        r = [0, 0, 0, 0];\n      }\n      return [\"M\", x, r[0] + y, \"Q\", x, y, x + r[0], y, \"L\", x + w - r[1], y, \"Q\", x + w, y, x + w, y + r[1], \"L\", x + w, y + h - r[2], \"Q\", x + w, y + h, x + w - r[2], y + h, \"L\", x + r[3], y + h, \"Q\", x, y + h, x, y + h - r[3], \"Z\"];\n    };\n\n    return Bar;\n\n  })(Morris.Grid);\n\n  Morris.Donut = (function(_super) {\n    __extends(Donut, _super);\n\n    Donut.prototype.defaults = {\n      colors: ['#0B62A4', '#3980B5', '#679DC6', '#95BBD7', '#B0CCE1', '#095791', '#095085', '#083E67', '#052C48', '#042135'],\n      backgroundColor: '#FFFFFF',\n      labelColor: '#000000',\n      formatter: Morris.commas,\n      resize: false\n    };\n\n    function Donut(options) {\n      this.resizeHandler = __bind(this.resizeHandler, this);\n      this.select = __bind(this.select, this);\n      this.click = __bind(this.click, this);\n      var _this = this;\n      if (!(this instanceof Morris.Donut)) {\n        return new Morris.Donut(options);\n      }\n      this.options = $.extend({}, this.defaults, options);\n      if (typeof options.element === 'string') {\n        this.el = $(document.getElementById(options.element));\n      } else {\n        this.el = $(options.element);\n      }\n      if (this.el === null || this.el.length === 0) {\n        throw new Error(\"Graph placeholder not found.\");\n      }\n      if (options.data === void 0 || options.data.length === 0) {\n        return;\n      }\n      this.raphael = new Raphael(this.el[0]);\n      if (this.options.resize) {\n        $(window).bind('resize', function(evt) {\n          if (_this.timeoutId != null) {\n            window.clearTimeout(_this.timeoutId);\n          }\n          return _this.timeoutId = window.setTimeout(_this.resizeHandler, 100);\n        });\n      }\n      this.setData(options.data);\n    }\n\n    Donut.prototype.redraw = function() {\n      var C, cx, cy, i, idx, last, max_value, min, next, seg, total, value, w, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\n      this.raphael.clear();\n      cx = this.el.width() / 2;\n      cy = this.el.height() / 2;\n      w = (Math.min(cx, cy) - 10) / 3;\n      total = 0;\n      _ref = this.values;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        value = _ref[_i];\n        total += value;\n      }\n      min = 5 / (2 * w);\n      C = 1.9999 * Math.PI - min * this.data.length;\n      last = 0;\n      idx = 0;\n      this.segments = [];\n      _ref1 = this.values;\n      for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n        value = _ref1[i];\n        next = last + min + C * (value / total);\n        seg = new Morris.DonutSegment(cx, cy, w * 2, w, last, next, this.data[i].color || this.options.colors[idx % this.options.colors.length], this.options.backgroundColor, idx, this.raphael);\n        seg.render();\n        this.segments.push(seg);\n        seg.on('hover', this.select);\n        seg.on('click', this.click);\n        last = next;\n        idx += 1;\n      }\n      this.text1 = this.drawEmptyDonutLabel(cx, cy - 10, this.options.labelColor, 15, 800);\n      this.text2 = this.drawEmptyDonutLabel(cx, cy + 10, this.options.labelColor, 14);\n      max_value = Math.max.apply(Math, this.values);\n      idx = 0;\n      _ref2 = this.values;\n      _results = [];\n      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n        value = _ref2[_k];\n        if (value === max_value) {\n          this.select(idx);\n          break;\n        }\n        _results.push(idx += 1);\n      }\n      return _results;\n    };\n\n    Donut.prototype.setData = function(data) {\n      var row;\n      this.data = data;\n      this.values = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.data;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          row = _ref[_i];\n          _results.push(parseFloat(row.value));\n        }\n        return _results;\n      }).call(this);\n      return this.redraw();\n    };\n\n    Donut.prototype.click = function(idx) {\n      return this.fire('click', idx, this.data[idx]);\n    };\n\n    Donut.prototype.select = function(idx) {\n      var row, s, segment, _i, _len, _ref;\n      _ref = this.segments;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        s = _ref[_i];\n        s.deselect();\n      }\n      segment = this.segments[idx];\n      segment.select();\n      row = this.data[idx];\n      return this.setLabels(row.label, this.options.formatter(row.value, row));\n    };\n\n    Donut.prototype.setLabels = function(label1, label2) {\n      var inner, maxHeightBottom, maxHeightTop, maxWidth, text1bbox, text1scale, text2bbox, text2scale;\n      inner = (Math.min(this.el.width() / 2, this.el.height() / 2) - 10) * 2 / 3;\n      maxWidth = 1.8 * inner;\n      maxHeightTop = inner / 2;\n      maxHeightBottom = inner / 3;\n      this.text1.attr({\n        text: label1,\n        transform: ''\n      });\n      text1bbox = this.text1.getBBox();\n      text1scale = Math.min(maxWidth / text1bbox.width, maxHeightTop / text1bbox.height);\n      this.text1.attr({\n        transform: \"S\" + text1scale + \",\" + text1scale + \",\" + (text1bbox.x + text1bbox.width / 2) + \",\" + (text1bbox.y + text1bbox.height)\n      });\n      this.text2.attr({\n        text: label2,\n        transform: ''\n      });\n      text2bbox = this.text2.getBBox();\n      text2scale = Math.min(maxWidth / text2bbox.width, maxHeightBottom / text2bbox.height);\n      return this.text2.attr({\n        transform: \"S\" + text2scale + \",\" + text2scale + \",\" + (text2bbox.x + text2bbox.width / 2) + \",\" + text2bbox.y\n      });\n    };\n\n    Donut.prototype.drawEmptyDonutLabel = function(xPos, yPos, color, fontSize, fontWeight) {\n      var text;\n      text = this.raphael.text(xPos, yPos, '').attr('font-size', fontSize).attr('fill', color);\n      if (fontWeight != null) {\n        text.attr('font-weight', fontWeight);\n      }\n      return text;\n    };\n\n    Donut.prototype.resizeHandler = function() {\n      this.timeoutId = null;\n      this.raphael.setSize(this.el.width(), this.el.height());\n      return this.redraw();\n    };\n\n    return Donut;\n\n  })(Morris.EventEmitter);\n\n  Morris.DonutSegment = (function(_super) {\n    __extends(DonutSegment, _super);\n\n    function DonutSegment(cx, cy, inner, outer, p0, p1, color, backgroundColor, index, raphael) {\n      this.cx = cx;\n      this.cy = cy;\n      this.inner = inner;\n      this.outer = outer;\n      this.color = color;\n      this.backgroundColor = backgroundColor;\n      this.index = index;\n      this.raphael = raphael;\n      this.deselect = __bind(this.deselect, this);\n      this.select = __bind(this.select, this);\n      this.sin_p0 = Math.sin(p0);\n      this.cos_p0 = Math.cos(p0);\n      this.sin_p1 = Math.sin(p1);\n      this.cos_p1 = Math.cos(p1);\n      this.is_long = (p1 - p0) > Math.PI ? 1 : 0;\n      this.path = this.calcSegment(this.inner + 3, this.inner + this.outer - 5);\n      this.selectedPath = this.calcSegment(this.inner + 3, this.inner + this.outer);\n      this.hilight = this.calcArc(this.inner);\n    }\n\n    DonutSegment.prototype.calcArcPoints = function(r) {\n      return [this.cx + r * this.sin_p0, this.cy + r * this.cos_p0, this.cx + r * this.sin_p1, this.cy + r * this.cos_p1];\n    };\n\n    DonutSegment.prototype.calcSegment = function(r1, r2) {\n      var ix0, ix1, iy0, iy1, ox0, ox1, oy0, oy1, _ref, _ref1;\n      _ref = this.calcArcPoints(r1), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\n      _ref1 = this.calcArcPoints(r2), ox0 = _ref1[0], oy0 = _ref1[1], ox1 = _ref1[2], oy1 = _ref1[3];\n      return (\"M\" + ix0 + \",\" + iy0) + (\"A\" + r1 + \",\" + r1 + \",0,\" + this.is_long + \",0,\" + ix1 + \",\" + iy1) + (\"L\" + ox1 + \",\" + oy1) + (\"A\" + r2 + \",\" + r2 + \",0,\" + this.is_long + \",1,\" + ox0 + \",\" + oy0) + \"Z\";\n    };\n\n    DonutSegment.prototype.calcArc = function(r) {\n      var ix0, ix1, iy0, iy1, _ref;\n      _ref = this.calcArcPoints(r), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\n      return (\"M\" + ix0 + \",\" + iy0) + (\"A\" + r + \",\" + r + \",0,\" + this.is_long + \",0,\" + ix1 + \",\" + iy1);\n    };\n\n    DonutSegment.prototype.render = function() {\n      var _this = this;\n      this.arc = this.drawDonutArc(this.hilight, this.color);\n      return this.seg = this.drawDonutSegment(this.path, this.color, this.backgroundColor, function() {\n        return _this.fire('hover', _this.index);\n      }, function() {\n        return _this.fire('click', _this.index);\n      });\n    };\n\n    DonutSegment.prototype.drawDonutArc = function(path, color) {\n      return this.raphael.path(path).attr({\n        stroke: color,\n        'stroke-width': 2,\n        opacity: 0\n      });\n    };\n\n    DonutSegment.prototype.drawDonutSegment = function(path, fillColor, strokeColor, hoverFunction, clickFunction) {\n      return this.raphael.path(path).attr({\n        fill: fillColor,\n        stroke: strokeColor,\n        'stroke-width': 3\n      }).hover(hoverFunction).click(clickFunction);\n    };\n\n    DonutSegment.prototype.select = function() {\n      if (!this.selected) {\n        this.seg.animate({\n          path: this.selectedPath\n        }, 150, '<>');\n        this.arc.animate({\n          opacity: 1\n        }, 150, '<>');\n        return this.selected = true;\n      }\n    };\n\n    DonutSegment.prototype.deselect = function() {\n      if (this.selected) {\n        this.seg.animate({\n          path: this.path\n        }, 150, '<>');\n        this.arc.animate({\n          opacity: 0\n        }, 150, '<>');\n        return this.selected = false;\n      }\n    };\n\n    return DonutSegment;\n\n  })(Morris.EventEmitter);\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/morris.js/morris.js\n// module id = 2\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../css-loader/index.js!./morris.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../css-loader/index.js!./morris.css\", function() {\n\t\t\tvar newContent = require(\"!!./../css-loader/index.js!./morris.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/morris.js/morris.css\n// module id = 3\n// module chunks = 0","var __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./area-chart.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-756f4bcb!vue-loader/lib/selector?type=template&index=0!./area-chart.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/area-chart.vue\n// module id = 4\n// module chunks = 0","var __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./bar-chart.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-674d63f2!vue-loader/lib/selector?type=template&index=0!./bar-chart.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/bar-chart.vue\n// module id = 5\n// module chunks = 0","var __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./donut-chart.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-6091d8d4!vue-loader/lib/selector?type=template&index=0!./donut-chart.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/donut-chart.vue\n// module id = 6\n// module chunks = 0","var __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./line-chart.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-602d5672!vue-loader/lib/selector?type=template&index=0!./line-chart.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/line-chart.vue\n// module id = 7\n// module chunks = 0","<template>\r\n  <div :id=\"id\"></div>\r\n</template>\r\n\r\n<script>\r\nimport 'morris.js/morris'\r\nimport 'morris.js/morris.css'\r\nimport Converter from '../util/converter'\r\nimport ChartProps from './chart-props'\r\n\r\nexport default {\r\n  name: 'area-chart',\r\n\r\n  mixins: [ ChartProps.area ],\r\n\r\n  data () {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    data (val) {\r\n      this.$nextTick(() => {\r\n        this.chart.setData(Converter.toObject(this.data))\r\n      })\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    let options = {\r\n      element: this.id,\r\n      data: Converter.toObject(this.data),\r\n      resize: Converter.toBoolean(this.resize),\r\n      labels: Converter.toObject(this.labels),\r\n      xkey: this.xkey,\r\n      ykeys: Converter.toObject(this.ykeys),\r\n      grid: Converter.toBoolean(this.grid),\r\n      gridTextColor: this.gridTextColor,\r\n      gridTextSize: Converter.toInt(this.gridTextSize),\r\n      gridTextFamily: this.gridTextFamily,\r\n      gridTextWeight: this.gridTextWeight\r\n    }\r\n\r\n    if (this.lineColors) {\r\n      options.lineColors = Converter.toObject(this.lineColors)\r\n    }\r\n\r\n    if (this.xLabels) {\r\n      options.xLabels = this.xLabels\r\n    }\r\n\r\n    this.chart = Morris.Area(options)\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// area-chart.vue?5a4b8a23","<template>\r\n  <div :id=\"id\"></div>\r\n</template>\r\n\r\n<script>\r\nimport 'morris.js/morris'\r\nimport 'morris.js/morris.css'\r\nimport Converter from '../util/converter'\r\nimport ChartProps from './chart-props'\r\n\r\nexport default {\r\n  name: 'bar-chart',\r\n\r\n  mixins: [ ChartProps.bar ],\r\n\r\n  data () {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    data (val) {\r\n      this.$nextTick(() => {\r\n        this.chart.setData(this.data)\r\n      })\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    let options = {\r\n      element: this.id,\r\n      data: Converter.toObject(this.data),\r\n      labels: Converter.toObject(this.labels),\r\n      resize: Converter.toBoolean(this.resize),\r\n      xkey: this.xkey,\r\n      ykeys: Converter.toObject(this.ykeys),\r\n      axes: Converter.toBoolean(this.axes),\r\n      hideHover: this.hideHover,\r\n      stacked: Converter.toBoolean(this.stacked),\r\n      grid: Converter.toBoolean(this.grid),\r\n      gridTextColor: this.gridTextColor,\r\n      gridTextSize: Converter.toInt(this.gridTextSize),\r\n      gridTextFamily: this.gridTextFamily,\r\n      gridTextWeight: this.gridTextWeight\r\n    }\r\n\r\n    if (this.barColors) {\r\n      options.barColors = Converter.toObject(this.barColors)\r\n    }\r\n\r\n    if (this.hoverCallback) {\r\n      options.hoverCallback = this.hoverCallback\r\n    }\r\n\r\n    this.chart = Morris.Bar(options)\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// bar-chart.vue?a7b293c8","<template>\r\n  <div :id=\"id\"></div>\r\n</template>\r\n\r\n<script>\r\nimport 'morris.js/morris'\r\nimport 'morris.js/morris.css'\r\nimport Converter from '../util/converter'\r\nimport ChartProps from './chart-props'\r\n\r\nexport default {\r\n  name: 'donut-chart',\r\n\r\n  mixins: [ ChartProps.donut ],\r\n\r\n  data () {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    data (val) {\r\n      this.$nextTick(() => {\r\n        this.chart.setData(Converter.toObject(this.data))\r\n      })\r\n    }\r\n  },\r\n\r\n  \r\n  mounted () {\r\n    let options = {\r\n      element: this.id,\r\n      data: Converter.toObject(this.data),\r\n      resize: Converter.toBoolean(this.resize)\r\n    }\r\n\r\n    if (this.colors) {\r\n      options.colors = Converter.toObject(this.colors)\r\n    }\r\n\r\n    if (this.formatter) {\r\n      options.formatter = this.formatter\r\n    }\r\n\r\n    this.chart = Morris.Donut(options)\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// donut-chart.vue?7b741b28","<template>\r\n  <div :id=\"id\"></div>\r\n</template>\r\n\r\n<script>\r\nimport 'morris.js/morris'\r\nimport 'morris.js/morris.css'\r\nimport Converter from '../util/converter'\r\nimport ChartProps from './chart-props'\r\n\r\nexport default {\r\n  name: 'line-chart',\r\n\r\n  mixins: [ ChartProps.line ],\r\n\r\n  data () {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    data (val) {\r\n      this.$nextTick(() => {\r\n        this.chart.setData(Converter.toObject(this.data))\r\n      })\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    let options = {\r\n      element: this.id,\r\n      data: Converter.toObject(this.data),\r\n      resize: Converter.toBoolean(this.resize),\r\n      labels: Converter.toObject(this.labels),\r\n      xkey: this.xkey,\r\n      ykeys: Converter.toObject(this.ykeys),\r\n      grid: Converter.toBoolean(this.grid),\r\n      gridTextColor: this.gridTextColor,\r\n      gridTextSize: Converter.toInt(this.gridTextSize),\r\n      gridTextFamily: this.gridTextFamily,\r\n      gridTextWeight: this.gridTextWeight\r\n    }\r\n\r\n    if (this.lineColors) {\r\n      options.lineColors = Converter.toObject(this.lineColors)\r\n    }\r\n\r\n    if (this.xLabels) {\r\n      options.xLabels = this.xLabels\r\n    }\r\n\r\n    this.chart = Morris.Line(options)\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// line-chart.vue?2efa07d1","exports = module.exports = require(\"./../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".morris-hover{position:absolute;z-index:1000}.morris-hover.morris-default-style{border-radius:10px;padding:6px;color:#666;background:hsla(0,0%,100%,.8);border:2px solid hsla(0,0%,90%,.8);font-family:sans-serif;font-size:12px;text-align:center}.morris-hover.morris-default-style .morris-hover-row-label{font-weight:700;margin:.25em 0}.morris-hover.morris-default-style .morris-hover-point{white-space:nowrap;margin:.1em 0}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/morris.js/morris.css\n// module id = 12\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 13\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-602d5672!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/line-chart.vue\n// module id = 14\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-6091d8d4!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/donut-chart.vue\n// module id = 15\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-674d63f2!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/bar-chart.vue\n// module id = 16\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-756f4bcb!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/area-chart.vue\n// module id = 17\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/addStyles.js\n// module id = 18\n// module chunks = 0","import DonutChart from './components/donut-chart.vue'\nimport BarChart from './components/bar-chart.vue'\nimport LineChart from './components/line-chart.vue'\nimport AreaChart from './components/area-chart.vue'\n\nconst VueMorris = {\n  DonutChart, BarChart, LineChart, AreaChart\n}\n\nmodule.exports = VueMorris\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}